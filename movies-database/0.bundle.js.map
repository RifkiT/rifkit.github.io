{"version":3,"file":"0.bundle.js","mappings":"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","sources":["webpack://movies-detail-app/./node_modules/browserslist/browser.js","webpack://movies-detail-app/./node_modules/browserslist/error.js","webpack://movies-detail-app/./node_modules/browserslist/index.js","webpack://movies-detail-app/./node_modules/browserslist/parse.js"],"sourcesContent":["var BrowserslistError = require('./error')\n\nfunction noop() {}\n\nmodule.exports = {\n  loadQueries: function loadQueries() {\n    throw new BrowserslistError(\n      'Sharable configs are not supported in client-side build of Browserslist'\n    )\n  },\n\n  getStat: function getStat(opts) {\n    return opts.stats\n  },\n\n  loadConfig: function loadConfig(opts) {\n    if (opts.config) {\n      throw new BrowserslistError(\n        'Browserslist config are not supported in client-side build'\n      )\n    }\n  },\n\n  loadCountry: function loadCountry() {\n    throw new BrowserslistError(\n      'Country statistics are not supported ' +\n        'in client-side build of Browserslist'\n    )\n  },\n\n  loadFeature: function loadFeature() {\n    throw new BrowserslistError(\n      'Supports queries are not available in client-side build of Browserslist'\n    )\n  },\n\n  currentNode: function currentNode(resolve, context) {\n    return resolve(['maintained node versions'], context)[0]\n  },\n\n  parseConfig: noop,\n\n  readConfig: noop,\n\n  findConfig: noop,\n\n  clearCaches: noop,\n\n  oldDataWarning: noop,\n\n  env: {}\n}\n","function BrowserslistError(message) {\n  this.name = 'BrowserslistError'\n  this.message = message\n  this.browserslist = true\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, BrowserslistError)\n  }\n}\n\nBrowserslistError.prototype = Error.prototype\n\nmodule.exports = BrowserslistError\n","var jsReleases = require('node-releases/data/processed/envs.json')\nvar agents = require('caniuse-lite/dist/unpacker/agents').agents\nvar jsEOL = require('node-releases/data/release-schedule/release-schedule.json')\nvar path = require('path')\nvar e2c = require('electron-to-chromium/versions')\n\nvar BrowserslistError = require('./error')\nvar parse = require('./parse')\nvar env = require('./node') // Will load browser.js in webpack\n\nvar YEAR = 365.259641 * 24 * 60 * 60 * 1000\nvar ANDROID_EVERGREEN_FIRST = 37\n\n// Helpers\n\nfunction isVersionsMatch(versionA, versionB) {\n  return (versionA + '.').indexOf(versionB + '.') === 0\n}\n\nfunction isEolReleased(name) {\n  var version = name.slice(1)\n  return browserslist.nodeVersions.some(function (i) {\n    return isVersionsMatch(i, version)\n  })\n}\n\nfunction normalize(versions) {\n  return versions.filter(function (version) {\n    return typeof version === 'string'\n  })\n}\n\nfunction normalizeElectron(version) {\n  var versionToUse = version\n  if (version.split('.').length === 3) {\n    versionToUse = version.split('.').slice(0, -1).join('.')\n  }\n  return versionToUse\n}\n\nfunction nameMapper(name) {\n  return function mapName(version) {\n    return name + ' ' + version\n  }\n}\n\nfunction getMajor(version) {\n  return parseInt(version.split('.')[0])\n}\n\nfunction getMajorVersions(released, number) {\n  if (released.length === 0) return []\n  var majorVersions = uniq(released.map(getMajor))\n  var minimum = majorVersions[majorVersions.length - number]\n  if (!minimum) {\n    return released\n  }\n  var selected = []\n  for (var i = released.length - 1; i >= 0; i--) {\n    if (minimum > getMajor(released[i])) break\n    selected.unshift(released[i])\n  }\n  return selected\n}\n\nfunction uniq(array) {\n  var filtered = []\n  for (var i = 0; i < array.length; i++) {\n    if (filtered.indexOf(array[i]) === -1) filtered.push(array[i])\n  }\n  return filtered\n}\n\nfunction fillUsage(result, name, data) {\n  for (var i in data) {\n    result[name + ' ' + i] = data[i]\n  }\n}\n\nfunction generateFilter(sign, version) {\n  version = parseFloat(version)\n  if (sign === '>') {\n    return function (v) {\n      return parseFloat(v) > version\n    }\n  } else if (sign === '>=') {\n    return function (v) {\n      return parseFloat(v) >= version\n    }\n  } else if (sign === '<') {\n    return function (v) {\n      return parseFloat(v) < version\n    }\n  } else {\n    return function (v) {\n      return parseFloat(v) <= version\n    }\n  }\n}\n\nfunction generateSemverFilter(sign, version) {\n  version = version.split('.').map(parseSimpleInt)\n  version[1] = version[1] || 0\n  version[2] = version[2] || 0\n  if (sign === '>') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(v, version) > 0\n    }\n  } else if (sign === '>=') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(v, version) >= 0\n    }\n  } else if (sign === '<') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(version, v) > 0\n    }\n  } else {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(version, v) >= 0\n    }\n  }\n}\n\nfunction parseSimpleInt(x) {\n  return parseInt(x)\n}\n\nfunction compare(a, b) {\n  if (a < b) return -1\n  if (a > b) return +1\n  return 0\n}\n\nfunction compareSemver(a, b) {\n  return (\n    compare(parseInt(a[0]), parseInt(b[0])) ||\n    compare(parseInt(a[1] || '0'), parseInt(b[1] || '0')) ||\n    compare(parseInt(a[2] || '0'), parseInt(b[2] || '0'))\n  )\n}\n\n// this follows the npm-like semver behavior\nfunction semverFilterLoose(operator, range) {\n  range = range.split('.').map(parseSimpleInt)\n  if (typeof range[1] === 'undefined') {\n    range[1] = 'x'\n  }\n  // ignore any patch version because we only return minor versions\n  // range[2] = 'x'\n  switch (operator) {\n    case '<=':\n      return function (version) {\n        version = version.split('.').map(parseSimpleInt)\n        return compareSemverLoose(version, range) <= 0\n      }\n    case '>=':\n    default:\n      return function (version) {\n        version = version.split('.').map(parseSimpleInt)\n        return compareSemverLoose(version, range) >= 0\n      }\n  }\n}\n\n// this follows the npm-like semver behavior\nfunction compareSemverLoose(version, range) {\n  if (version[0] !== range[0]) {\n    return version[0] < range[0] ? -1 : +1\n  }\n  if (range[1] === 'x') {\n    return 0\n  }\n  if (version[1] !== range[1]) {\n    return version[1] < range[1] ? -1 : +1\n  }\n  return 0\n}\n\nfunction resolveVersion(data, version) {\n  if (data.versions.indexOf(version) !== -1) {\n    return version\n  } else if (browserslist.versionAliases[data.name][version]) {\n    return browserslist.versionAliases[data.name][version]\n  } else {\n    return false\n  }\n}\n\nfunction normalizeVersion(data, version) {\n  var resolved = resolveVersion(data, version)\n  if (resolved) {\n    return resolved\n  } else if (data.versions.length === 1) {\n    return data.versions[0]\n  } else {\n    return false\n  }\n}\n\nfunction filterByYear(since, context) {\n  since = since / 1000\n  return Object.keys(agents).reduce(function (selected, name) {\n    var data = byName(name, context)\n    if (!data) return selected\n    var versions = Object.keys(data.releaseDate).filter(function (v) {\n      var date = data.releaseDate[v]\n      return date !== null && date >= since\n    })\n    return selected.concat(versions.map(nameMapper(data.name)))\n  }, [])\n}\n\nfunction cloneData(data) {\n  return {\n    name: data.name,\n    versions: data.versions,\n    released: data.released,\n    releaseDate: data.releaseDate\n  }\n}\n\nfunction mapVersions(data, map) {\n  data.versions = data.versions.map(function (i) {\n    return map[i] || i\n  })\n  data.released = data.released.map(function (i) {\n    return map[i] || i\n  })\n  var fixedDate = {}\n  for (var i in data.releaseDate) {\n    fixedDate[map[i] || i] = data.releaseDate[i]\n  }\n  data.releaseDate = fixedDate\n  return data\n}\n\nfunction byName(name, context) {\n  name = name.toLowerCase()\n  name = browserslist.aliases[name] || name\n  if (context.mobileToDesktop && browserslist.desktopNames[name]) {\n    var desktop = browserslist.data[browserslist.desktopNames[name]]\n    if (name === 'android') {\n      return normalizeAndroidData(cloneData(browserslist.data[name]), desktop)\n    } else {\n      var cloned = cloneData(desktop)\n      cloned.name = name\n      if (name === 'op_mob') {\n        cloned = mapVersions(cloned, { '10.0-10.1': '10' })\n      }\n      return cloned\n    }\n  }\n  return browserslist.data[name]\n}\n\nfunction normalizeAndroidVersions(androidVersions, chromeVersions) {\n  var firstEvergreen = ANDROID_EVERGREEN_FIRST\n  var last = chromeVersions[chromeVersions.length - 1]\n  return androidVersions\n    .filter(function (version) {\n      return /^(?:[2-4]\\.|[34]$)/.test(version)\n    })\n    .concat(chromeVersions.slice(firstEvergreen - last - 1))\n}\n\nfunction normalizeAndroidData(android, chrome) {\n  android.released = normalizeAndroidVersions(android.released, chrome.released)\n  android.versions = normalizeAndroidVersions(android.versions, chrome.versions)\n  return android\n}\n\nfunction checkName(name, context) {\n  var data = byName(name, context)\n  if (!data) throw new BrowserslistError('Unknown browser ' + name)\n  return data\n}\n\nfunction unknownQuery(query) {\n  return new BrowserslistError(\n    'Unknown browser query `' +\n      query +\n      '`. ' +\n      'Maybe you are using old Browserslist or made typo in query.'\n  )\n}\n\nfunction filterAndroid(list, versions, context) {\n  if (context.mobileToDesktop) return list\n  var released = browserslist.data.android.released\n  var last = released[released.length - 1]\n  var diff = last - ANDROID_EVERGREEN_FIRST - versions\n  if (diff > 0) {\n    return list.slice(-1)\n  } else {\n    return list.slice(diff - 1)\n  }\n}\n\nfunction resolve(queries, context) {\n  return parse(QUERIES, queries).reduce(function (result, node, index) {\n    if (node.not && index === 0) {\n      throw new BrowserslistError(\n        'Write any browsers query (for instance, `defaults`) ' +\n          'before `' +\n          node.query +\n          '`'\n      )\n    }\n    var type = QUERIES[node.type]\n    var array = type.select.call(browserslist, context, node).map(function (j) {\n      var parts = j.split(' ')\n      if (parts[1] === '0') {\n        return parts[0] + ' ' + byName(parts[0], context).versions[0]\n      } else {\n        return j\n      }\n    })\n\n    if (node.compose === 'and') {\n      if (node.not) {\n        return result.filter(function (j) {\n          return array.indexOf(j) === -1\n        })\n      } else {\n        return result.filter(function (j) {\n          return array.indexOf(j) !== -1\n        })\n      }\n    } else {\n      if (node.not) {\n        var filter = {}\n        array.forEach(function (j) {\n          filter[j] = true\n        })\n        return result.filter(function (j) {\n          return !filter[j]\n        })\n      }\n      return result.concat(array)\n    }\n  }, [])\n}\n\nfunction prepareOpts(opts) {\n  if (typeof opts === 'undefined') opts = {}\n\n  if (typeof opts.path === 'undefined') {\n    opts.path = path.resolve ? path.resolve('.') : '.'\n  }\n\n  return opts\n}\n\nfunction prepareQueries(queries, opts) {\n  if (typeof queries === 'undefined' || queries === null) {\n    var config = browserslist.loadConfig(opts)\n    if (config) {\n      queries = config\n    } else {\n      queries = browserslist.defaults\n    }\n  }\n\n  return queries\n}\n\nfunction checkQueries(queries) {\n  if (!(typeof queries === 'string' || Array.isArray(queries))) {\n    throw new BrowserslistError(\n      'Browser queries must be an array or string. Got ' + typeof queries + '.'\n    )\n  }\n}\n\nvar cache = {}\n\nfunction browserslist(queries, opts) {\n  opts = prepareOpts(opts)\n  queries = prepareQueries(queries, opts)\n  checkQueries(queries)\n\n  var context = {\n    ignoreUnknownVersions: opts.ignoreUnknownVersions,\n    dangerousExtend: opts.dangerousExtend,\n    mobileToDesktop: opts.mobileToDesktop,\n    path: opts.path,\n    env: opts.env\n  }\n\n  env.oldDataWarning(browserslist.data)\n  var stats = env.getStat(opts, browserslist.data)\n  if (stats) {\n    context.customUsage = {}\n    for (var browser in stats) {\n      fillUsage(context.customUsage, browser, stats[browser])\n    }\n  }\n\n  var cacheKey = JSON.stringify([queries, context])\n  if (cache[cacheKey]) return cache[cacheKey]\n\n  var result = uniq(resolve(queries, context)).sort(function (name1, name2) {\n    name1 = name1.split(' ')\n    name2 = name2.split(' ')\n    if (name1[0] === name2[0]) {\n      // assumptions on caniuse data\n      // 1) version ranges never overlaps\n      // 2) if version is not a range, it never contains `-`\n      var version1 = name1[1].split('-')[0]\n      var version2 = name2[1].split('-')[0]\n      return compareSemver(version2.split('.'), version1.split('.'))\n    } else {\n      return compare(name1[0], name2[0])\n    }\n  })\n  if (!env.env.BROWSERSLIST_DISABLE_CACHE) {\n    cache[cacheKey] = result\n  }\n  return result\n}\n\nbrowserslist.parse = function (queries, opts) {\n  opts = prepareOpts(opts)\n  queries = prepareQueries(queries, opts)\n  checkQueries(queries)\n  return parse(QUERIES, queries)\n}\n\n// Will be filled by Can I Use data below\nbrowserslist.cache = {}\nbrowserslist.data = {}\nbrowserslist.usage = {\n  global: {},\n  custom: null\n}\n\n// Default browsers query\nbrowserslist.defaults = ['> 0.5%', 'last 2 versions', 'Firefox ESR', 'not dead']\n\n// Browser names aliases\nbrowserslist.aliases = {\n  fx: 'firefox',\n  ff: 'firefox',\n  ios: 'ios_saf',\n  explorer: 'ie',\n  blackberry: 'bb',\n  explorermobile: 'ie_mob',\n  operamini: 'op_mini',\n  operamobile: 'op_mob',\n  chromeandroid: 'and_chr',\n  firefoxandroid: 'and_ff',\n  ucandroid: 'and_uc',\n  qqandroid: 'and_qq'\n}\n\n// Can I Use only provides a few versions for some browsers (e.g. and_chr).\n// Fallback to a similar browser for unknown versions\nbrowserslist.desktopNames = {\n  and_chr: 'chrome',\n  and_ff: 'firefox',\n  ie_mob: 'ie',\n  op_mob: 'opera',\n  android: 'chrome' // has extra processing logic\n}\n\n// Aliases to work with joined versions like `ios_saf 7.0-7.1`\nbrowserslist.versionAliases = {}\n\nbrowserslist.clearCaches = env.clearCaches\nbrowserslist.parseConfig = env.parseConfig\nbrowserslist.readConfig = env.readConfig\nbrowserslist.findConfig = env.findConfig\nbrowserslist.loadConfig = env.loadConfig\n\nbrowserslist.coverage = function (browsers, stats) {\n  var data\n  if (typeof stats === 'undefined') {\n    data = browserslist.usage.global\n  } else if (stats === 'my stats') {\n    var opts = {}\n    opts.path = path.resolve ? path.resolve('.') : '.'\n    var customStats = env.getStat(opts)\n    if (!customStats) {\n      throw new BrowserslistError('Custom usage statistics was not provided')\n    }\n    data = {}\n    for (var browser in customStats) {\n      fillUsage(data, browser, customStats[browser])\n    }\n  } else if (typeof stats === 'string') {\n    if (stats.length > 2) {\n      stats = stats.toLowerCase()\n    } else {\n      stats = stats.toUpperCase()\n    }\n    env.loadCountry(browserslist.usage, stats, browserslist.data)\n    data = browserslist.usage[stats]\n  } else {\n    if ('dataByBrowser' in stats) {\n      stats = stats.dataByBrowser\n    }\n    data = {}\n    for (var name in stats) {\n      for (var version in stats[name]) {\n        data[name + ' ' + version] = stats[name][version]\n      }\n    }\n  }\n\n  return browsers.reduce(function (all, i) {\n    var usage = data[i]\n    if (usage === undefined) {\n      usage = data[i.replace(/ \\S+$/, ' 0')]\n    }\n    return all + (usage || 0)\n  }, 0)\n}\n\nfunction nodeQuery(context, node) {\n  var matched = browserslist.nodeVersions.filter(function (i) {\n    return isVersionsMatch(i, node.version)\n  })\n  if (matched.length === 0) {\n    if (context.ignoreUnknownVersions) {\n      return []\n    } else {\n      throw new BrowserslistError(\n        'Unknown version ' + node.version + ' of Node.js'\n      )\n    }\n  }\n  return ['node ' + matched[matched.length - 1]]\n}\n\nfunction sinceQuery(context, node) {\n  var year = parseInt(node.year)\n  var month = parseInt(node.month || '01') - 1\n  var day = parseInt(node.day || '01')\n  return filterByYear(Date.UTC(year, month, day, 0, 0, 0), context)\n}\n\nfunction coverQuery(context, node) {\n  var coverage = parseFloat(node.coverage)\n  var usage = browserslist.usage.global\n  if (node.place) {\n    if (node.place.match(/^my\\s+stats$/i)) {\n      if (!context.customUsage) {\n        throw new BrowserslistError('Custom usage statistics was not provided')\n      }\n      usage = context.customUsage\n    } else {\n      var place\n      if (node.place.length === 2) {\n        place = node.place.toUpperCase()\n      } else {\n        place = node.place.toLowerCase()\n      }\n      env.loadCountry(browserslist.usage, place, browserslist.data)\n      usage = browserslist.usage[place]\n    }\n  }\n  var versions = Object.keys(usage).sort(function (a, b) {\n    return usage[b] - usage[a]\n  })\n  var coveraged = 0\n  var result = []\n  var version\n  for (var i = 0; i < versions.length; i++) {\n    version = versions[i]\n    if (usage[version] === 0) break\n    coveraged += usage[version]\n    result.push(version)\n    if (coveraged >= coverage) break\n  }\n  return result\n}\n\nvar QUERIES = {\n  last_major_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      return Object.keys(agents).reduce(function (selected, name) {\n        var data = byName(name, context)\n        if (!data) return selected\n        var list = getMajorVersions(data.released, node.versions)\n        list = list.map(nameMapper(data.name))\n        if (data.name === 'android') {\n          list = filterAndroid(list, node.versions, context)\n        }\n        return selected.concat(list)\n      }, [])\n    }\n  },\n  last_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+versions?$/i,\n    select: function (context, node) {\n      return Object.keys(agents).reduce(function (selected, name) {\n        var data = byName(name, context)\n        if (!data) return selected\n        var list = data.released.slice(-node.versions)\n        list = list.map(nameMapper(data.name))\n        if (data.name === 'android') {\n          list = filterAndroid(list, node.versions, context)\n        }\n        return selected.concat(list)\n      }, [])\n    }\n  },\n  last_electron_major_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+electron\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      var validVersions = getMajorVersions(Object.keys(e2c), node.versions)\n      return validVersions.map(function (i) {\n        return 'chrome ' + e2c[i]\n      })\n    }\n  },\n  last_node_major_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+node\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      return getMajorVersions(browserslist.nodeVersions, node.versions).map(\n        function (version) {\n          return 'node ' + version\n        }\n      )\n    }\n  },\n  last_browser_major_versions: {\n    matches: ['versions', 'browser'],\n    regexp: /^last\\s+(\\d+)\\s+(\\w+)\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context)\n      var validVersions = getMajorVersions(data.released, node.versions)\n      var list = validVersions.map(nameMapper(data.name))\n      if (data.name === 'android') {\n        list = filterAndroid(list, node.versions, context)\n      }\n      return list\n    }\n  },\n  last_electron_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+electron\\s+versions?$/i,\n    select: function (context, node) {\n      return Object.keys(e2c)\n        .slice(-node.versions)\n        .map(function (i) {\n          return 'chrome ' + e2c[i]\n        })\n    }\n  },\n  last_node_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+node\\s+versions?$/i,\n    select: function (context, node) {\n      return browserslist.nodeVersions\n        .slice(-node.versions)\n        .map(function (version) {\n          return 'node ' + version\n        })\n    }\n  },\n  last_browser_versions: {\n    matches: ['versions', 'browser'],\n    regexp: /^last\\s+(\\d+)\\s+(\\w+)\\s+versions?$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context)\n      var list = data.released.slice(-node.versions).map(nameMapper(data.name))\n      if (data.name === 'android') {\n        list = filterAndroid(list, node.versions, context)\n      }\n      return list\n    }\n  },\n  unreleased_versions: {\n    matches: [],\n    regexp: /^unreleased\\s+versions$/i,\n    select: function (context) {\n      return Object.keys(agents).reduce(function (selected, name) {\n        var data = byName(name, context)\n        if (!data) return selected\n        var list = data.versions.filter(function (v) {\n          return data.released.indexOf(v) === -1\n        })\n        list = list.map(nameMapper(data.name))\n        return selected.concat(list)\n      }, [])\n    }\n  },\n  unreleased_electron_versions: {\n    matches: [],\n    regexp: /^unreleased\\s+electron\\s+versions?$/i,\n    select: function () {\n      return []\n    }\n  },\n  unreleased_browser_versions: {\n    matches: ['browser'],\n    regexp: /^unreleased\\s+(\\w+)\\s+versions?$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context)\n      return data.versions\n        .filter(function (v) {\n          return data.released.indexOf(v) === -1\n        })\n        .map(nameMapper(data.name))\n    }\n  },\n  last_years: {\n    matches: ['years'],\n    regexp: /^last\\s+(\\d*.?\\d+)\\s+years?$/i,\n    select: function (context, node) {\n      return filterByYear(Date.now() - YEAR * node.years, context)\n    }\n  },\n  since_y: {\n    matches: ['year'],\n    regexp: /^since (\\d+)$/i,\n    select: sinceQuery\n  },\n  since_y_m: {\n    matches: ['year', 'month'],\n    regexp: /^since (\\d+)-(\\d+)$/i,\n    select: sinceQuery\n  },\n  since_y_m_d: {\n    matches: ['year', 'month', 'day'],\n    regexp: /^since (\\d+)-(\\d+)-(\\d+)$/i,\n    select: sinceQuery\n  },\n  popularity: {\n    matches: ['sign', 'popularity'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity)\n      var usage = browserslist.usage.global\n      return Object.keys(usage).reduce(function (result, version) {\n        if (node.sign === '>') {\n          if (usage[version] > popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<') {\n          if (usage[version] < popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<=') {\n          if (usage[version] <= popularity) {\n            result.push(version)\n          }\n        } else if (usage[version] >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  popularity_in_my_stats: {\n    matches: ['sign', 'popularity'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+my\\s+stats$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity)\n      if (!context.customUsage) {\n        throw new BrowserslistError('Custom usage statistics was not provided')\n      }\n      var usage = context.customUsage\n      return Object.keys(usage).reduce(function (result, version) {\n        var percentage = usage[version]\n        if (percentage == null) {\n          return result\n        }\n\n        if (node.sign === '>') {\n          if (percentage > popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<') {\n          if (percentage < popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<=') {\n          if (percentage <= popularity) {\n            result.push(version)\n          }\n        } else if (percentage >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  popularity_in_config_stats: {\n    matches: ['sign', 'popularity', 'config'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+(\\S+)\\s+stats$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity)\n      var stats = env.loadStat(context, node.config, browserslist.data)\n      if (stats) {\n        context.customUsage = {}\n        for (var browser in stats) {\n          fillUsage(context.customUsage, browser, stats[browser])\n        }\n      }\n      if (!context.customUsage) {\n        throw new BrowserslistError('Custom usage statistics was not provided')\n      }\n      var usage = context.customUsage\n      return Object.keys(usage).reduce(function (result, version) {\n        var percentage = usage[version]\n        if (percentage == null) {\n          return result\n        }\n\n        if (node.sign === '>') {\n          if (percentage > popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<') {\n          if (percentage < popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<=') {\n          if (percentage <= popularity) {\n            result.push(version)\n          }\n        } else if (percentage >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  popularity_in_place: {\n    matches: ['sign', 'popularity', 'place'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+((alt-)?\\w\\w)$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity)\n      var place = node.place\n      if (place.length === 2) {\n        place = place.toUpperCase()\n      } else {\n        place = place.toLowerCase()\n      }\n      env.loadCountry(browserslist.usage, place, browserslist.data)\n      var usage = browserslist.usage[place]\n      return Object.keys(usage).reduce(function (result, version) {\n        var percentage = usage[version]\n        if (percentage == null) {\n          return result\n        }\n\n        if (node.sign === '>') {\n          if (percentage > popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<') {\n          if (percentage < popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<=') {\n          if (percentage <= popularity) {\n            result.push(version)\n          }\n        } else if (percentage >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  cover: {\n    matches: ['coverage'],\n    regexp: /^cover\\s+(\\d+|\\d+\\.\\d+|\\.\\d+)%$/i,\n    select: coverQuery\n  },\n  cover_in: {\n    matches: ['coverage', 'place'],\n    regexp: /^cover\\s+(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+(my\\s+stats|(alt-)?\\w\\w)$/i,\n    select: coverQuery\n  },\n  supports: {\n    matches: ['feature'],\n    regexp: /^supports\\s+([\\w-]+)$/,\n    select: function (context, node) {\n      env.loadFeature(browserslist.cache, node.feature)\n      var features = browserslist.cache[node.feature]\n      return Object.keys(features).reduce(function (result, version) {\n        var flags = features[version]\n        if (flags.indexOf('y') >= 0 || flags.indexOf('a') >= 0) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  electron_range: {\n    matches: ['from', 'to'],\n    regexp: /^electron\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      var fromToUse = normalizeElectron(node.from)\n      var toToUse = normalizeElectron(node.to)\n      var from = parseFloat(node.from)\n      var to = parseFloat(node.to)\n      if (!e2c[fromToUse]) {\n        throw new BrowserslistError('Unknown version ' + from + ' of electron')\n      }\n      if (!e2c[toToUse]) {\n        throw new BrowserslistError('Unknown version ' + to + ' of electron')\n      }\n      return Object.keys(e2c)\n        .filter(function (i) {\n          var parsed = parseFloat(i)\n          return parsed >= from && parsed <= to\n        })\n        .map(function (i) {\n          return 'chrome ' + e2c[i]\n        })\n    }\n  },\n  node_range: {\n    matches: ['from', 'to'],\n    regexp: /^node\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      return browserslist.nodeVersions\n        .filter(semverFilterLoose('>=', node.from))\n        .filter(semverFilterLoose('<=', node.to))\n        .map(function (v) {\n          return 'node ' + v\n        })\n    }\n  },\n  browser_range: {\n    matches: ['browser', 'from', 'to'],\n    regexp: /^(\\w+)\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context)\n      var from = parseFloat(normalizeVersion(data, node.from) || node.from)\n      var to = parseFloat(normalizeVersion(data, node.to) || node.to)\n      function filter(v) {\n        var parsed = parseFloat(v)\n        return parsed >= from && parsed <= to\n      }\n      return data.released.filter(filter).map(nameMapper(data.name))\n    }\n  },\n  electron_ray: {\n    matches: ['sign', 'version'],\n    regexp: /^electron\\s*(>=?|<=?)\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      var versionToUse = normalizeElectron(node.version)\n      return Object.keys(e2c)\n        .filter(generateFilter(node.sign, versionToUse))\n        .map(function (i) {\n          return 'chrome ' + e2c[i]\n        })\n    }\n  },\n  node_ray: {\n    matches: ['sign', 'version'],\n    regexp: /^node\\s*(>=?|<=?)\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      return browserslist.nodeVersions\n        .filter(generateSemverFilter(node.sign, node.version))\n        .map(function (v) {\n          return 'node ' + v\n        })\n    }\n  },\n  browser_ray: {\n    matches: ['browser', 'sign', 'version'],\n    regexp: /^(\\w+)\\s*(>=?|<=?)\\s*([\\d.]+)$/,\n    select: function (context, node) {\n      var version = node.version\n      var data = checkName(node.browser, context)\n      var alias = browserslist.versionAliases[data.name][version]\n      if (alias) version = alias\n      return data.released\n        .filter(generateFilter(node.sign, version))\n        .map(function (v) {\n          return data.name + ' ' + v\n        })\n    }\n  },\n  firefox_esr: {\n    matches: [],\n    regexp: /^(firefox|ff|fx)\\s+esr$/i,\n    select: function () {\n      return ['firefox 102']\n    }\n  },\n  opera_mini_all: {\n    matches: [],\n    regexp: /(operamini|op_mini)\\s+all/i,\n    select: function () {\n      return ['op_mini all']\n    }\n  },\n  electron_version: {\n    matches: ['version'],\n    regexp: /^electron\\s+([\\d.]+)$/i,\n    select: function (context, node) {\n      var versionToUse = normalizeElectron(node.version)\n      var chrome = e2c[versionToUse]\n      if (!chrome) {\n        throw new BrowserslistError(\n          'Unknown version ' + node.version + ' of electron'\n        )\n      }\n      return ['chrome ' + chrome]\n    }\n  },\n  node_major_version: {\n    matches: ['version'],\n    regexp: /^node\\s+(\\d+)$/i,\n    select: nodeQuery\n  },\n  node_minor_version: {\n    matches: ['version'],\n    regexp: /^node\\s+(\\d+\\.\\d+)$/i,\n    select: nodeQuery\n  },\n  node_patch_version: {\n    matches: ['version'],\n    regexp: /^node\\s+(\\d+\\.\\d+\\.\\d+)$/i,\n    select: nodeQuery\n  },\n  current_node: {\n    matches: [],\n    regexp: /^current\\s+node$/i,\n    select: function (context) {\n      return [env.currentNode(resolve, context)]\n    }\n  },\n  maintained_node: {\n    matches: [],\n    regexp: /^maintained\\s+node\\s+versions$/i,\n    select: function (context) {\n      var now = Date.now()\n      var queries = Object.keys(jsEOL)\n        .filter(function (key) {\n          return (\n            now < Date.parse(jsEOL[key].end) &&\n            now > Date.parse(jsEOL[key].start) &&\n            isEolReleased(key)\n          )\n        })\n        .map(function (key) {\n          return 'node ' + key.slice(1)\n        })\n      return resolve(queries, context)\n    }\n  },\n  phantomjs_1_9: {\n    matches: [],\n    regexp: /^phantomjs\\s+1.9$/i,\n    select: function () {\n      return ['safari 5']\n    }\n  },\n  phantomjs_2_1: {\n    matches: [],\n    regexp: /^phantomjs\\s+2.1$/i,\n    select: function () {\n      return ['safari 6']\n    }\n  },\n  browser_version: {\n    matches: ['browser', 'version'],\n    regexp: /^(\\w+)\\s+(tp|[\\d.]+)$/i,\n    select: function (context, node) {\n      var version = node.version\n      if (/^tp$/i.test(version)) version = 'TP'\n      var data = checkName(node.browser, context)\n      var alias = normalizeVersion(data, version)\n      if (alias) {\n        version = alias\n      } else {\n        if (version.indexOf('.') === -1) {\n          alias = version + '.0'\n        } else {\n          alias = version.replace(/\\.0$/, '')\n        }\n        alias = normalizeVersion(data, alias)\n        if (alias) {\n          version = alias\n        } else if (context.ignoreUnknownVersions) {\n          return []\n        } else {\n          throw new BrowserslistError(\n            'Unknown version ' + version + ' of ' + node.browser\n          )\n        }\n      }\n      return [data.name + ' ' + version]\n    }\n  },\n  browserslist_config: {\n    matches: [],\n    regexp: /^browserslist config$/i,\n    select: function (context) {\n      return browserslist(undefined, context)\n    }\n  },\n  extends: {\n    matches: ['config'],\n    regexp: /^extends (.+)$/i,\n    select: function (context, node) {\n      return resolve(env.loadQueries(context, node.config), context)\n    }\n  },\n  defaults: {\n    matches: [],\n    regexp: /^defaults$/i,\n    select: function (context) {\n      return resolve(browserslist.defaults, context)\n    }\n  },\n  dead: {\n    matches: [],\n    regexp: /^dead$/i,\n    select: function (context) {\n      var dead = [\n        'Baidu >= 0',\n        'ie <= 11',\n        'ie_mob <= 11',\n        'bb <= 10',\n        'op_mob <= 12.1',\n        'samsung 4'\n      ]\n      return resolve(dead, context)\n    }\n  },\n  unknown: {\n    matches: [],\n    regexp: /^(\\w+)$/i,\n    select: function (context, node) {\n      if (byName(node.query, context)) {\n        throw new BrowserslistError(\n          'Specify versions in Browserslist query for browser ' + node.query\n        )\n      } else {\n        throw unknownQuery(node.query)\n      }\n    }\n  }\n}\n\n// Get and convert Can I Use data\n\n;(function () {\n  for (var name in agents) {\n    var browser = agents[name]\n    browserslist.data[name] = {\n      name: name,\n      versions: normalize(agents[name].versions),\n      released: normalize(agents[name].versions.slice(0, -3)),\n      releaseDate: agents[name].release_date\n    }\n    fillUsage(browserslist.usage.global, name, browser.usage_global)\n\n    browserslist.versionAliases[name] = {}\n    for (var i = 0; i < browser.versions.length; i++) {\n      var full = browser.versions[i]\n      if (!full) continue\n\n      if (full.indexOf('-') !== -1) {\n        var interval = full.split('-')\n        for (var j = 0; j < interval.length; j++) {\n          browserslist.versionAliases[name][interval[j]] = full\n        }\n      }\n    }\n  }\n\n  browserslist.versionAliases.op_mob['59'] = '58'\n\n  browserslist.nodeVersions = jsReleases.map(function (release) {\n    return release.version\n  })\n})()\n\nmodule.exports = browserslist\n","var AND_REGEXP = /^\\s+and\\s+(.*)/i\nvar OR_REGEXP = /^(?:,\\s*|\\s+or\\s+)(.*)/i\n\nfunction flatten(array) {\n  if (!Array.isArray(array)) return [array]\n  return array.reduce(function (a, b) {\n    return a.concat(flatten(b))\n  }, [])\n}\n\nfunction find(string, predicate) {\n  for (var n = 1, max = string.length; n <= max; n++) {\n    var parsed = string.substr(-n, n)\n    if (predicate(parsed, n, max)) {\n      return string.slice(0, -n)\n    }\n  }\n  return ''\n}\n\nfunction matchQuery(all, query) {\n  var node = { query: query }\n  if (query.indexOf('not ') === 0) {\n    node.not = true\n    query = query.slice(4)\n  }\n\n  for (var name in all) {\n    var type = all[name]\n    var match = query.match(type.regexp)\n    if (match) {\n      node.type = name\n      for (var i = 0; i < type.matches.length; i++) {\n        node[type.matches[i]] = match[i + 1]\n      }\n      return node\n    }\n  }\n\n  node.type = 'unknown'\n  return node\n}\n\nfunction matchBlock(all, string, qs) {\n  var node\n  return find(string, function (parsed, n, max) {\n    if (AND_REGEXP.test(parsed)) {\n      node = matchQuery(all, parsed.match(AND_REGEXP)[1])\n      node.compose = 'and'\n      qs.unshift(node)\n      return true\n    } else if (OR_REGEXP.test(parsed)) {\n      node = matchQuery(all, parsed.match(OR_REGEXP)[1])\n      node.compose = 'or'\n      qs.unshift(node)\n      return true\n    } else if (n === max) {\n      node = matchQuery(all, parsed.trim())\n      node.compose = 'or'\n      qs.unshift(node)\n      return true\n    }\n    return false\n  })\n}\n\nmodule.exports = function parse(all, queries) {\n  if (!Array.isArray(queries)) queries = [queries]\n  return flatten(\n    queries.map(function (block) {\n      var qs = []\n      do {\n        block = matchBlock(all, block, qs)\n      } while (block)\n      return qs\n    })\n  )\n}\n"],"names":["BrowserslistError","noop","module","exports","loadQueries","getStat","opts","stats","loadConfig","config","loadCountry","loadFeature","currentNode","resolve","context","parseConfig","readConfig","findConfig","clearCaches","oldDataWarning","env","message","this","name","browserslist","Error","captureStackTrace","prototype","jsReleases","agents","jsEOL","path","e2c","parse","ANDROID_EVERGREEN_FIRST","isVersionsMatch","versionA","versionB","indexOf","normalize","versions","filter","version","normalizeElectron","versionToUse","split","length","slice","join","nameMapper","getMajor","parseInt","getMajorVersions","released","number","majorVersions","uniq","map","minimum","selected","i","unshift","array","filtered","push","fillUsage","result","data","generateFilter","sign","parseFloat","v","parseSimpleInt","x","compare","a","b","compareSemver","semverFilterLoose","operator","range","compareSemverLoose","normalizeVersion","resolved","versionAliases","resolveVersion","filterByYear","since","Object","keys","reduce","byName","releaseDate","date","concat","cloneData","toLowerCase","aliases","mobileToDesktop","desktopNames","desktop","android","chrome","normalizeAndroidVersions","cloned","fixedDate","mapVersions","androidVersions","chromeVersions","firstEvergreen","last","test","checkName","filterAndroid","list","diff","queries","QUERIES","node","index","not","query","type","select","call","j","parts","compose","forEach","prepareOpts","prepareQueries","defaults","checkQueries","Array","isArray","cache","ignoreUnknownVersions","dangerousExtend","browser","customUsage","cacheKey","JSON","stringify","sort","name1","name2","version1","BROWSERSLIST_DISABLE_CACHE","nodeQuery","matched","nodeVersions","sinceQuery","year","month","day","Date","UTC","coverQuery","coverage","usage","global","place","match","toUpperCase","coveraged","custom","fx","ff","ios","explorer","blackberry","explorermobile","operamini","operamobile","chromeandroid","firefoxandroid","ucandroid","qqandroid","and_chr","and_ff","ie_mob","op_mob","browsers","customStats","dataByBrowser","all","undefined","replace","last_major_versions","matches","regexp","last_versions","last_electron_major_versions","last_node_major_versions","last_browser_major_versions","last_electron_versions","last_node_versions","last_browser_versions","unreleased_versions","unreleased_electron_versions","unreleased_browser_versions","last_years","now","years","since_y","since_y_m","since_y_m_d","popularity","popularity_in_my_stats","percentage","popularity_in_config_stats","loadStat","popularity_in_place","cover","cover_in","supports","feature","features","flags","electron_range","fromToUse","from","toToUse","to","parsed","node_range","browser_range","electron_ray","node_ray","browser_ray","alias","firefox_esr","opera_mini_all","electron_version","node_major_version","node_minor_version","node_patch_version","current_node","maintained_node","key","end","start","some","phantomjs_1_9","phantomjs_2_1","browser_version","browserslist_config","extends","dead","unknown","release_date","usage_global","full","interval","release","AND_REGEXP","OR_REGEXP","flatten","matchQuery","matchBlock","string","qs","predicate","n","max","substr","find","trim","block"],"sourceRoot":""}