{"version":3,"file":"513.bundle.js","mappings":"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","sources":["webpack://movies-detail-app/./node_modules/autoprefixer/lib/at-rule.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/autoprefixer.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/brackets.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/browsers.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/declaration.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/align-content.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/align-items.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/align-self.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/animation.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/appearance.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/autofill.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/backdrop-filter.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/background-clip.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/background-size.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/block-logical.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/border-image.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/border-radius.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/break-props.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/cross-fade.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/display-flex.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/display-grid.js"],"sourcesContent":["let Prefixer = require('./prefixer')\n\nclass AtRule extends Prefixer {\n  /**\n   * Clone and add prefixes for at-rule\n   */\n  add(rule, prefix) {\n    let prefixed = prefix + rule.name\n\n    let already = rule.parent.some(\n      i => i.name === prefixed && i.params === rule.params\n    )\n    if (already) {\n      return undefined\n    }\n\n    let cloned = this.clone(rule, { name: prefixed })\n    return rule.parent.insertBefore(rule, cloned)\n  }\n\n  /**\n   * Clone node with prefixes\n   */\n  process(node) {\n    let parent = this.parentPrefix(node)\n\n    for (let prefix of this.prefixes) {\n      if (!parent || parent === prefix) {\n        this.add(node, prefix)\n      }\n    }\n  }\n}\n\nmodule.exports = AtRule\n","let browserslist = require('browserslist')\nlet { agents } = require('caniuse-lite')\nlet pico = require('picocolors')\n\nlet Browsers = require('./browsers')\nlet Prefixes = require('./prefixes')\nlet dataPrefixes = require('../data/prefixes')\nlet getInfo = require('./info')\n\nlet autoprefixerData = { browsers: agents, prefixes: dataPrefixes }\n\nconst WARNING =\n  '\\n' +\n  '  Replace Autoprefixer `browsers` option to Browserslist config.\\n' +\n  '  Use `browserslist` key in `package.json` or `.browserslistrc` file.\\n' +\n  '\\n' +\n  '  Using `browsers` option can cause errors. Browserslist config can\\n' +\n  '  be used for Babel, Autoprefixer, postcss-normalize and other tools.\\n' +\n  '\\n' +\n  '  If you really need to use option, rename it to `overrideBrowserslist`.\\n' +\n  '\\n' +\n  '  Learn more at:\\n' +\n  '  https://github.com/browserslist/browserslist#readme\\n' +\n  '  https://twitter.com/browserslist\\n' +\n  '\\n'\n\nfunction isPlainObject(obj) {\n  return Object.prototype.toString.apply(obj) === '[object Object]'\n}\n\nlet cache = new Map()\n\nfunction timeCapsule(result, prefixes) {\n  if (prefixes.browsers.selected.length === 0) {\n    return\n  }\n  if (prefixes.add.selectors.length > 0) {\n    return\n  }\n  if (Object.keys(prefixes.add).length > 2) {\n    return\n  }\n  /* c8 ignore next 11 */\n  result.warn(\n    'Autoprefixer target browsers do not need any prefixes.' +\n      'You do not need Autoprefixer anymore.\\n' +\n      'Check your Browserslist config to be sure that your targets ' +\n      'are set up correctly.\\n' +\n      '\\n' +\n      '  Learn more at:\\n' +\n      '  https://github.com/postcss/autoprefixer#readme\\n' +\n      '  https://github.com/browserslist/browserslist#readme\\n' +\n      '\\n'\n  )\n}\n\nmodule.exports = plugin\n\nfunction plugin(...reqs) {\n  let options\n  if (reqs.length === 1 && isPlainObject(reqs[0])) {\n    options = reqs[0]\n    reqs = undefined\n  } else if (reqs.length === 0 || (reqs.length === 1 && !reqs[0])) {\n    reqs = undefined\n  } else if (reqs.length <= 2 && (Array.isArray(reqs[0]) || !reqs[0])) {\n    options = reqs[1]\n    reqs = reqs[0]\n  } else if (typeof reqs[reqs.length - 1] === 'object') {\n    options = reqs.pop()\n  }\n\n  if (!options) {\n    options = {}\n  }\n\n  if (options.browser) {\n    throw new Error(\n      'Change `browser` option to `overrideBrowserslist` in Autoprefixer'\n    )\n  } else if (options.browserslist) {\n    throw new Error(\n      'Change `browserslist` option to `overrideBrowserslist` in Autoprefixer'\n    )\n  }\n\n  if (options.overrideBrowserslist) {\n    reqs = options.overrideBrowserslist\n  } else if (options.browsers) {\n    if (typeof console !== 'undefined' && console.warn) {\n      console.warn(\n        pico.red(WARNING.replace(/`[^`]+`/g, i => pico.yellow(i.slice(1, -1))))\n      )\n    }\n    reqs = options.browsers\n  }\n\n  let brwlstOpts = {\n    ignoreUnknownVersions: options.ignoreUnknownVersions,\n    stats: options.stats,\n    env: options.env\n  }\n\n  function loadPrefixes(opts) {\n    let d = autoprefixerData\n    let browsers = new Browsers(d.browsers, reqs, opts, brwlstOpts)\n    let key = browsers.selected.join(', ') + JSON.stringify(options)\n\n    if (!cache.has(key)) {\n      cache.set(key, new Prefixes(d.prefixes, browsers, options))\n    }\n\n    return cache.get(key)\n  }\n\n  return {\n    postcssPlugin: 'autoprefixer',\n\n    prepare(result) {\n      let prefixes = loadPrefixes({\n        from: result.opts.from,\n        env: options.env\n      })\n\n      return {\n        OnceExit(root) {\n          timeCapsule(result, prefixes)\n          if (options.remove !== false) {\n            prefixes.processor.remove(root, result)\n          }\n          if (options.add !== false) {\n            prefixes.processor.add(root, result)\n          }\n        }\n      }\n    },\n\n    info(opts) {\n      opts = opts || {}\n      opts.from = opts.from || process.cwd()\n      return getInfo(loadPrefixes(opts))\n    },\n\n    options,\n    browsers: reqs\n  }\n}\n\nplugin.postcss = true\n\n/**\n * Autoprefixer data\n */\nplugin.data = autoprefixerData\n\n/**\n * Autoprefixer default browsers\n */\nplugin.defaults = browserslist.defaults\n\n/**\n * Inspect with default Autoprefixer\n */\nplugin.info = () => plugin().info()\n","function last(array) {\n  return array[array.length - 1]\n}\n\nlet brackets = {\n  /**\n   * Parse string to nodes tree\n   */\n  parse(str) {\n    let current = ['']\n    let stack = [current]\n\n    for (let sym of str) {\n      if (sym === '(') {\n        current = ['']\n        last(stack).push(current)\n        stack.push(current)\n        continue\n      }\n\n      if (sym === ')') {\n        stack.pop()\n        current = last(stack)\n        current.push('')\n        continue\n      }\n\n      current[current.length - 1] += sym\n    }\n\n    return stack[0]\n  },\n\n  /**\n   * Generate output string by nodes tree\n   */\n  stringify(ast) {\n    let result = ''\n    for (let i of ast) {\n      if (typeof i === 'object') {\n        result += `(${brackets.stringify(i)})`\n        continue\n      }\n\n      result += i\n    }\n    return result\n  }\n}\n\nmodule.exports = brackets\n","let browserslist = require('browserslist')\nlet agents = require('caniuse-lite').agents\n\nlet utils = require('./utils')\n\nclass Browsers {\n  /**\n   * Return all prefixes for default browser data\n   */\n  static prefixes() {\n    if (this.prefixesCache) {\n      return this.prefixesCache\n    }\n\n    this.prefixesCache = []\n    for (let name in agents) {\n      this.prefixesCache.push(`-${agents[name].prefix}-`)\n    }\n\n    this.prefixesCache = utils\n      .uniq(this.prefixesCache)\n      .sort((a, b) => b.length - a.length)\n\n    return this.prefixesCache\n  }\n\n  /**\n   * Check is value contain any possible prefix\n   */\n  static withPrefix(value) {\n    if (!this.prefixesRegexp) {\n      this.prefixesRegexp = new RegExp(this.prefixes().join('|'))\n    }\n\n    return this.prefixesRegexp.test(value)\n  }\n\n  constructor(data, requirements, options, browserslistOpts) {\n    this.data = data\n    this.options = options || {}\n    this.browserslistOpts = browserslistOpts || {}\n    this.selected = this.parse(requirements)\n  }\n\n  /**\n   * Return browsers selected by requirements\n   */\n  parse(requirements) {\n    let opts = {}\n    for (let i in this.browserslistOpts) {\n      opts[i] = this.browserslistOpts[i]\n    }\n    opts.path = this.options.from\n    return browserslist(requirements, opts)\n  }\n\n  /**\n   * Return prefix for selected browser\n   */\n  prefix(browser) {\n    let [name, version] = browser.split(' ')\n    let data = this.data[name]\n\n    let prefix = data.prefix_exceptions && data.prefix_exceptions[version]\n    if (!prefix) {\n      prefix = data.prefix\n    }\n    return `-${prefix}-`\n  }\n\n  /**\n   * Is browser is selected by requirements\n   */\n  isSelected(browser) {\n    return this.selected.includes(browser)\n  }\n}\n\nmodule.exports = Browsers\n","let Prefixer = require('./prefixer')\nlet Browsers = require('./browsers')\nlet utils = require('./utils')\n\nclass Declaration extends Prefixer {\n  /**\n   * Always true, because we already get prefixer by property name\n   */\n  check(/* decl */) {\n    return true\n  }\n\n  /**\n   * Return prefixed version of property\n   */\n  prefixed(prop, prefix) {\n    return prefix + prop\n  }\n\n  /**\n   * Return unprefixed version of property\n   */\n  normalize(prop) {\n    return prop\n  }\n\n  /**\n   * Check `value`, that it contain other prefixes, rather than `prefix`\n   */\n  otherPrefixes(value, prefix) {\n    for (let other of Browsers.prefixes()) {\n      if (other === prefix) {\n        continue\n      }\n      if (value.includes(other)) {\n        return value.replace(/var\\([^)]+\\)/, '').includes(other)\n      }\n    }\n    return false\n  }\n\n  /**\n   * Set prefix to declaration\n   */\n  set(decl, prefix) {\n    decl.prop = this.prefixed(decl.prop, prefix)\n    return decl\n  }\n\n  /**\n   * Should we use visual cascade for prefixes\n   */\n  needCascade(decl) {\n    if (!decl._autoprefixerCascade) {\n      decl._autoprefixerCascade =\n        this.all.options.cascade !== false && decl.raw('before').includes('\\n')\n    }\n    return decl._autoprefixerCascade\n  }\n\n  /**\n   * Return maximum length of possible prefixed property\n   */\n  maxPrefixed(prefixes, decl) {\n    if (decl._autoprefixerMax) {\n      return decl._autoprefixerMax\n    }\n\n    let max = 0\n    for (let prefix of prefixes) {\n      prefix = utils.removeNote(prefix)\n      if (prefix.length > max) {\n        max = prefix.length\n      }\n    }\n    decl._autoprefixerMax = max\n\n    return decl._autoprefixerMax\n  }\n\n  /**\n   * Calculate indentation to create visual cascade\n   */\n  calcBefore(prefixes, decl, prefix = '') {\n    let max = this.maxPrefixed(prefixes, decl)\n    let diff = max - utils.removeNote(prefix).length\n\n    let before = decl.raw('before')\n    if (diff > 0) {\n      before += Array(diff).fill(' ').join('')\n    }\n\n    return before\n  }\n\n  /**\n   * Remove visual cascade\n   */\n  restoreBefore(decl) {\n    let lines = decl.raw('before').split('\\n')\n    let min = lines[lines.length - 1]\n\n    this.all.group(decl).up(prefixed => {\n      let array = prefixed.raw('before').split('\\n')\n      let last = array[array.length - 1]\n      if (last.length < min.length) {\n        min = last\n      }\n    })\n\n    lines[lines.length - 1] = min\n    decl.raws.before = lines.join('\\n')\n  }\n\n  /**\n   * Clone and insert new declaration\n   */\n  insert(decl, prefix, prefixes) {\n    let cloned = this.set(this.clone(decl), prefix)\n    if (!cloned) return undefined\n\n    let already = decl.parent.some(\n      i => i.prop === cloned.prop && i.value === cloned.value\n    )\n    if (already) {\n      return undefined\n    }\n\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix)\n    }\n    return decl.parent.insertBefore(decl, cloned)\n  }\n\n  /**\n   * Did this declaration has this prefix above\n   */\n  isAlready(decl, prefixed) {\n    let already = this.all.group(decl).up(i => i.prop === prefixed)\n    if (!already) {\n      already = this.all.group(decl).down(i => i.prop === prefixed)\n    }\n    return already\n  }\n\n  /**\n   * Clone and add prefixes for declaration\n   */\n  add(decl, prefix, prefixes, result) {\n    let prefixed = this.prefixed(decl.prop, prefix)\n    if (\n      this.isAlready(decl, prefixed) ||\n      this.otherPrefixes(decl.value, prefix)\n    ) {\n      return undefined\n    }\n    return this.insert(decl, prefix, prefixes, result)\n  }\n\n  /**\n   * Add spaces for visual cascade\n   */\n  process(decl, result) {\n    if (!this.needCascade(decl)) {\n      super.process(decl, result)\n      return\n    }\n\n    let prefixes = super.process(decl, result)\n\n    if (!prefixes || !prefixes.length) {\n      return\n    }\n\n    this.restoreBefore(decl)\n    decl.raws.before = this.calcBefore(prefixes, decl)\n  }\n\n  /**\n   * Return list of prefixed properties to clean old prefixes\n   */\n  old(prop, prefix) {\n    return [this.prefixed(prop, prefix)]\n  }\n}\n\nmodule.exports = Declaration\n","let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass AlignContent extends Declaration {\n  /**\n   * Change property name for 2012 spec\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2012) {\n      return prefix + 'flex-line-pack'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'align-content'\n  }\n\n  /**\n   * Change value for 2012 spec and ignore prefix for 2009\n   */\n  set(decl, prefix) {\n    let spec = flexSpec(prefix)[0]\n    if (spec === 2012) {\n      decl.value = AlignContent.oldValues[decl.value] || decl.value\n      return super.set(decl, prefix)\n    }\n    if (spec === 'final') {\n      return super.set(decl, prefix)\n    }\n    return undefined\n  }\n}\n\nAlignContent.names = ['align-content', 'flex-line-pack']\n\nAlignContent.oldValues = {\n  'flex-end': 'end',\n  'flex-start': 'start',\n  'space-between': 'justify',\n  'space-around': 'distribute'\n}\n\nmodule.exports = AlignContent\n","let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass AlignItems extends Declaration {\n  /**\n   * Change property name for 2009 and 2012 specs\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2009) {\n      return prefix + 'box-align'\n    }\n    if (spec === 2012) {\n      return prefix + 'flex-align'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'align-items'\n  }\n\n  /**\n   * Change value for 2009 and 2012 specs\n   */\n  set(decl, prefix) {\n    let spec = flexSpec(prefix)[0]\n    if (spec === 2009 || spec === 2012) {\n      decl.value = AlignItems.oldValues[decl.value] || decl.value\n    }\n    return super.set(decl, prefix)\n  }\n}\n\nAlignItems.names = ['align-items', 'flex-align', 'box-align']\n\nAlignItems.oldValues = {\n  'flex-end': 'end',\n  'flex-start': 'start'\n}\n\nmodule.exports = AlignItems\n","let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass AlignSelf extends Declaration {\n  check(decl) {\n    return (\n      decl.parent &&\n      !decl.parent.some(i => {\n        return i.prop && i.prop.startsWith('grid-')\n      })\n    )\n  }\n\n  /**\n   * Change property name for 2012 specs\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2012) {\n      return prefix + 'flex-item-align'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'align-self'\n  }\n\n  /**\n   * Change value for 2012 spec and ignore prefix for 2009\n   */\n  set(decl, prefix) {\n    let spec = flexSpec(prefix)[0]\n    if (spec === 2012) {\n      decl.value = AlignSelf.oldValues[decl.value] || decl.value\n      return super.set(decl, prefix)\n    }\n    if (spec === 'final') {\n      return super.set(decl, prefix)\n    }\n    return undefined\n  }\n}\n\nAlignSelf.names = ['align-self', 'flex-item-align']\n\nAlignSelf.oldValues = {\n  'flex-end': 'end',\n  'flex-start': 'start'\n}\n\nmodule.exports = AlignSelf\n","let Declaration = require('../declaration')\n\nclass Animation extends Declaration {\n  /**\n   * Don’t add prefixes for modern values.\n   */\n  check(decl) {\n    return !decl.value.split(/\\s+/).some(i => {\n      let lower = i.toLowerCase()\n      return lower === 'reverse' || lower === 'alternate-reverse'\n    })\n  }\n}\n\nAnimation.names = ['animation', 'animation-direction']\n\nmodule.exports = Animation\n","let Declaration = require('../declaration')\nlet utils = require('../utils')\n\nclass Appearance extends Declaration {\n  constructor(name, prefixes, all) {\n    super(name, prefixes, all)\n\n    if (this.prefixes) {\n      this.prefixes = utils.uniq(\n        this.prefixes.map(i => {\n          if (i === '-ms-') {\n            return '-webkit-'\n          }\n          return i\n        })\n      )\n    }\n  }\n}\n\nAppearance.names = ['appearance']\n\nmodule.exports = Appearance\n","let Selector = require('../selector')\nlet utils = require('../utils')\n\nclass Autofill extends Selector {\n  constructor(name, prefixes, all) {\n    super(name, prefixes, all)\n\n    if (this.prefixes) {\n      this.prefixes = utils.uniq(this.prefixes.map(() => '-webkit-'))\n    }\n  }\n\n  /**\n   * Return different selectors depend on prefix\n   */\n  prefixed(prefix) {\n    if (prefix === '-webkit-') {\n      return ':-webkit-autofill'\n    }\n    return `:${prefix}autofill`\n  }\n}\n\nAutofill.names = [':autofill']\n\nmodule.exports = Autofill\n","let Declaration = require('../declaration')\nlet utils = require('../utils')\n\nclass BackdropFilter extends Declaration {\n  constructor(name, prefixes, all) {\n    super(name, prefixes, all)\n\n    if (this.prefixes) {\n      this.prefixes = utils.uniq(\n        this.prefixes.map(i => {\n          return i === '-ms-' ? '-webkit-' : i\n        })\n      )\n    }\n  }\n}\n\nBackdropFilter.names = ['backdrop-filter']\n\nmodule.exports = BackdropFilter\n","let Declaration = require('../declaration')\nlet utils = require('../utils')\n\nclass BackgroundClip extends Declaration {\n  constructor(name, prefixes, all) {\n    super(name, prefixes, all)\n\n    if (this.prefixes) {\n      this.prefixes = utils.uniq(\n        this.prefixes.map(i => {\n          return i === '-ms-' ? '-webkit-' : i\n        })\n      )\n    }\n  }\n\n  check(decl) {\n    return decl.value.toLowerCase() === 'text'\n  }\n}\n\nBackgroundClip.names = ['background-clip']\n\nmodule.exports = BackgroundClip\n","let Declaration = require('../declaration')\n\nclass BackgroundSize extends Declaration {\n  /**\n   * Duplication parameter for -webkit- browsers\n   */\n  set(decl, prefix) {\n    let value = decl.value.toLowerCase()\n    if (\n      prefix === '-webkit-' &&\n      !value.includes(' ') &&\n      value !== 'contain' &&\n      value !== 'cover'\n    ) {\n      decl.value = decl.value + ' ' + decl.value\n    }\n    return super.set(decl, prefix)\n  }\n}\n\nBackgroundSize.names = ['background-size']\n\nmodule.exports = BackgroundSize\n","let Declaration = require('../declaration')\n\nclass BlockLogical extends Declaration {\n  /**\n   * Use old syntax for -moz- and -webkit-\n   */\n  prefixed(prop, prefix) {\n    if (prop.includes('-start')) {\n      return prefix + prop.replace('-block-start', '-before')\n    }\n    return prefix + prop.replace('-block-end', '-after')\n  }\n\n  /**\n   * Return property name by spec\n   */\n  normalize(prop) {\n    if (prop.includes('-before')) {\n      return prop.replace('-before', '-block-start')\n    }\n    return prop.replace('-after', '-block-end')\n  }\n}\n\nBlockLogical.names = [\n  'border-block-start',\n  'border-block-end',\n  'margin-block-start',\n  'margin-block-end',\n  'padding-block-start',\n  'padding-block-end',\n  'border-before',\n  'border-after',\n  'margin-before',\n  'margin-after',\n  'padding-before',\n  'padding-after'\n]\n\nmodule.exports = BlockLogical\n","let Declaration = require('../declaration')\n\nclass BorderImage extends Declaration {\n  /**\n   * Remove fill parameter for prefixed declarations\n   */\n  set(decl, prefix) {\n    decl.value = decl.value.replace(/\\s+fill(\\s)/, '$1')\n    return super.set(decl, prefix)\n  }\n}\n\nBorderImage.names = ['border-image']\n\nmodule.exports = BorderImage\n","let Declaration = require('../declaration')\n\nclass BorderRadius extends Declaration {\n  /**\n   * Change syntax, when add Mozilla prefix\n   */\n  prefixed(prop, prefix) {\n    if (prefix === '-moz-') {\n      return prefix + (BorderRadius.toMozilla[prop] || prop)\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Return unprefixed version of property\n   */\n  normalize(prop) {\n    return BorderRadius.toNormal[prop] || prop\n  }\n}\n\nBorderRadius.names = ['border-radius']\n\nBorderRadius.toMozilla = {}\nBorderRadius.toNormal = {}\n\nfor (let ver of ['top', 'bottom']) {\n  for (let hor of ['left', 'right']) {\n    let normal = `border-${ver}-${hor}-radius`\n    let mozilla = `border-radius-${ver}${hor}`\n\n    BorderRadius.names.push(normal)\n    BorderRadius.names.push(mozilla)\n\n    BorderRadius.toMozilla[normal] = mozilla\n    BorderRadius.toNormal[mozilla] = normal\n  }\n}\n\nmodule.exports = BorderRadius\n","let Declaration = require('../declaration')\n\nclass BreakProps extends Declaration {\n  /**\n   * Change name for -webkit- and -moz- prefix\n   */\n  prefixed(prop, prefix) {\n    return `${prefix}column-${prop}`\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize(prop) {\n    if (prop.includes('inside')) {\n      return 'break-inside'\n    }\n    if (prop.includes('before')) {\n      return 'break-before'\n    }\n    return 'break-after'\n  }\n\n  /**\n   * Change prefixed value for avoid-column and avoid-page\n   */\n  set(decl, prefix) {\n    if (\n      (decl.prop === 'break-inside' && decl.value === 'avoid-column') ||\n      decl.value === 'avoid-page'\n    ) {\n      decl.value = 'avoid'\n    }\n    return super.set(decl, prefix)\n  }\n\n  /**\n   * Don’t prefix some values\n   */\n  insert(decl, prefix, prefixes) {\n    if (decl.prop !== 'break-inside') {\n      return super.insert(decl, prefix, prefixes)\n    }\n    if (/region/i.test(decl.value) || /page/i.test(decl.value)) {\n      return undefined\n    }\n    return super.insert(decl, prefix, prefixes)\n  }\n}\n\nBreakProps.names = [\n  'break-inside',\n  'page-break-inside',\n  'column-break-inside',\n  'break-before',\n  'page-break-before',\n  'column-break-before',\n  'break-after',\n  'page-break-after',\n  'column-break-after'\n]\n\nmodule.exports = BreakProps\n","let list = require('postcss').list\n\nlet Value = require('../value')\n\nclass CrossFade extends Value {\n  replace(string, prefix) {\n    return list\n      .space(string)\n      .map(value => {\n        if (value.slice(0, +this.name.length + 1) !== this.name + '(') {\n          return value\n        }\n\n        let close = value.lastIndexOf(')')\n        let after = value.slice(close + 1)\n        let args = value.slice(this.name.length + 1, close)\n\n        if (prefix === '-webkit-') {\n          let match = args.match(/\\d*.?\\d+%?/)\n          if (match) {\n            args = args.slice(match[0].length).trim()\n            args += `, ${match[0]}`\n          } else {\n            args += ', 0.5'\n          }\n        }\n        return prefix + this.name + '(' + args + ')' + after\n      })\n      .join(' ')\n  }\n}\n\nCrossFade.names = ['cross-fade']\n\nmodule.exports = CrossFade\n","let flexSpec = require('./flex-spec')\nlet OldValue = require('../old-value')\nlet Value = require('../value')\n\nclass DisplayFlex extends Value {\n  constructor(name, prefixes) {\n    super(name, prefixes)\n    if (name === 'display-flex') {\n      this.name = 'flex'\n    }\n  }\n\n  /**\n   * Faster check for flex value\n   */\n  check(decl) {\n    return decl.prop === 'display' && decl.value === this.name\n  }\n\n  /**\n   * Return value by spec\n   */\n  prefixed(prefix) {\n    let spec, value\n    ;[spec, prefix] = flexSpec(prefix)\n\n    if (spec === 2009) {\n      if (this.name === 'flex') {\n        value = 'box'\n      } else {\n        value = 'inline-box'\n      }\n    } else if (spec === 2012) {\n      if (this.name === 'flex') {\n        value = 'flexbox'\n      } else {\n        value = 'inline-flexbox'\n      }\n    } else if (spec === 'final') {\n      value = this.name\n    }\n\n    return prefix + value\n  }\n\n  /**\n   * Add prefix to value depend on flebox spec version\n   */\n  replace(string, prefix) {\n    return this.prefixed(prefix)\n  }\n\n  /**\n   * Change value for old specs\n   */\n  old(prefix) {\n    let prefixed = this.prefixed(prefix)\n    if (!prefixed) return undefined\n    return new OldValue(this.name, prefixed)\n  }\n}\n\nDisplayFlex.names = ['display-flex', 'inline-flex']\n\nmodule.exports = DisplayFlex\n","let Value = require('../value')\n\nclass DisplayGrid extends Value {\n  constructor(name, prefixes) {\n    super(name, prefixes)\n    if (name === 'display-grid') {\n      this.name = 'grid'\n    }\n  }\n\n  /**\n   * Faster check for flex value\n   */\n  check(decl) {\n    return decl.prop === 'display' && decl.value === this.name\n  }\n}\n\nDisplayGrid.names = ['display-grid', 'inline-grid']\n\nmodule.exports = DisplayGrid\n"],"names":["Prefixer","module","exports","add","rule","prefix","prefixed","name","parent","some","i","params","cloned","this","clone","insertBefore","process","node","parentPrefix","prefixes","browserslist","agents","pico","Browsers","Prefixes","dataPrefixes","getInfo","autoprefixerData","browsers","WARNING","cache","Map","plugin","reqs","options","obj","length","Object","prototype","toString","apply","undefined","Array","isArray","pop","browser","Error","overrideBrowserslist","console","warn","red","replace","yellow","slice","brwlstOpts","ignoreUnknownVersions","stats","env","loadPrefixes","opts","d","key","selected","join","JSON","stringify","has","set","get","postcssPlugin","prepare","result","from","OnceExit","root","selectors","keys","timeCapsule","remove","processor","info","cwd","postcss","data","defaults","last","array","brackets","parse","str","current","stack","sym","push","ast","utils","static","prefixesCache","uniq","sort","a","b","value","prefixesRegexp","RegExp","test","constructor","requirements","browserslistOpts","path","version","split","prefix_exceptions","isSelected","includes","check","prop","normalize","otherPrefixes","other","decl","needCascade","_autoprefixerCascade","all","cascade","raw","maxPrefixed","_autoprefixerMax","max","removeNote","calcBefore","diff","before","fill","restoreBefore","lines","min","group","up","raws","insert","isAlready","already","down","super","old","flexSpec","Declaration","AlignContent","spec","oldValues","names","AlignItems","AlignSelf","startsWith","Animation","lower","toLowerCase","Appearance","map","Selector","Autofill","BackdropFilter","BackgroundClip","BackgroundSize","BlockLogical","BorderImage","BorderRadius","toMozilla","toNormal","ver","hor","normal","mozilla","BreakProps","list","Value","CrossFade","string","space","close","lastIndexOf","after","args","match","trim","OldValue","DisplayFlex","DisplayGrid"],"sourceRoot":""}