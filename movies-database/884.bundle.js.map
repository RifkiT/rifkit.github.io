{"version":3,"file":"884.bundle.js","mappings":"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","sources":["webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/file-selector-button.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/filter-value.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/filter.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/flex-basis.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/flex-direction.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/flex-flow.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/flex-grow.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/flex-shrink.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/flex-spec.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/flex-wrap.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/flex.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/fullscreen.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/gradient.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/grid-area.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/grid-column-align.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/grid-end.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/grid-row-align.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/grid-row-column.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/grid-rows-columns.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/grid-start.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/grid-template-areas.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/grid-template.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/grid-utils.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/image-rendering.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/image-set.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/inline-logical.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/intrinsic.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/justify-content.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/mask-border.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/mask-composite.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/order.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/overscroll-behavior.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/pixelated.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/place-self.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/placeholder-shown.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/placeholder.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/print-color-adjust.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/text-decoration-skip-ink.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/text-decoration.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/text-emphasis-position.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/transform-decl.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/user-select.js","webpack://movies-detail-app/./node_modules/autoprefixer/lib/hacks/writing-mode.js"],"sourcesContent":["let Selector = require('../selector')\nlet utils = require('../utils')\n\nclass FileSelectorButton extends Selector {\n  constructor(name, prefixes, all) {\n    super(name, prefixes, all)\n\n    if (this.prefixes) {\n      this.prefixes = utils.uniq(this.prefixes.map(() => '-webkit-'))\n    }\n  }\n\n  /**\n   * Return different selectors depend on prefix\n   */\n  prefixed(prefix) {\n    if (prefix === '-webkit-') {\n      return '::-webkit-file-upload-button'\n    }\n    return `::${prefix}file-selector-button`\n  }\n}\n\nFileSelectorButton.names = ['::file-selector-button']\n\nmodule.exports = FileSelectorButton\n","let Value = require('../value')\n\nclass FilterValue extends Value {\n  constructor(name, prefixes) {\n    super(name, prefixes)\n    if (name === 'filter-function') {\n      this.name = 'filter'\n    }\n  }\n}\n\nFilterValue.names = ['filter', 'filter-function']\n\nmodule.exports = FilterValue\n","let Declaration = require('../declaration')\n\nclass Filter extends Declaration {\n  /**\n   * Check is it Internet Explorer filter\n   */\n  check(decl) {\n    let v = decl.value\n    return (\n      !v.toLowerCase().includes('alpha(') &&\n      !v.includes('DXImageTransform.Microsoft') &&\n      !v.includes('data:image/svg+xml')\n    )\n  }\n}\n\nFilter.names = ['filter']\n\nmodule.exports = Filter\n","let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass FlexBasis extends Declaration {\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'flex-basis'\n  }\n\n  /**\n   * Return flex property for 2012 spec\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2012) {\n      return prefix + 'flex-preferred-size'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Ignore 2009 spec and use flex property for 2012\n   */\n  set(decl, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2012 || spec === 'final') {\n      return super.set(decl, prefix)\n    }\n    return undefined\n  }\n}\n\nFlexBasis.names = ['flex-basis', 'flex-preferred-size']\n\nmodule.exports = FlexBasis\n","let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass FlexDirection extends Declaration {\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'flex-direction'\n  }\n\n  /**\n   * Use two properties for 2009 spec\n   */\n  insert(decl, prefix, prefixes) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec !== 2009) {\n      return super.insert(decl, prefix, prefixes)\n    }\n    let already = decl.parent.some(\n      i =>\n        i.prop === prefix + 'box-orient' || i.prop === prefix + 'box-direction'\n    )\n    if (already) {\n      return undefined\n    }\n\n    let v = decl.value\n    let orient, dir\n    if (v === 'inherit' || v === 'initial' || v === 'unset') {\n      orient = v\n      dir = v\n    } else {\n      orient = v.includes('row') ? 'horizontal' : 'vertical'\n      dir = v.includes('reverse') ? 'reverse' : 'normal'\n    }\n\n    let cloned = this.clone(decl)\n    cloned.prop = prefix + 'box-orient'\n    cloned.value = orient\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix)\n    }\n    decl.parent.insertBefore(decl, cloned)\n\n    cloned = this.clone(decl)\n    cloned.prop = prefix + 'box-direction'\n    cloned.value = dir\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix)\n    }\n    return decl.parent.insertBefore(decl, cloned)\n  }\n\n  /**\n   * Clean two properties for 2009 spec\n   */\n  old(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2009) {\n      return [prefix + 'box-orient', prefix + 'box-direction']\n    } else {\n      return super.old(prop, prefix)\n    }\n  }\n}\n\nFlexDirection.names = ['flex-direction', 'box-direction', 'box-orient']\n\nmodule.exports = FlexDirection\n","let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass FlexFlow extends Declaration {\n  /**\n   * Use two properties for 2009 spec\n   */\n  insert(decl, prefix, prefixes) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec !== 2009) {\n      return super.insert(decl, prefix, prefixes)\n    }\n    let values = decl.value\n      .split(/\\s+/)\n      .filter(i => i !== 'wrap' && i !== 'nowrap' && 'wrap-reverse')\n    if (values.length === 0) {\n      return undefined\n    }\n\n    let already = decl.parent.some(\n      i =>\n        i.prop === prefix + 'box-orient' || i.prop === prefix + 'box-direction'\n    )\n    if (already) {\n      return undefined\n    }\n\n    let value = values[0]\n    let orient = value.includes('row') ? 'horizontal' : 'vertical'\n    let dir = value.includes('reverse') ? 'reverse' : 'normal'\n\n    let cloned = this.clone(decl)\n    cloned.prop = prefix + 'box-orient'\n    cloned.value = orient\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix)\n    }\n    decl.parent.insertBefore(decl, cloned)\n\n    cloned = this.clone(decl)\n    cloned.prop = prefix + 'box-direction'\n    cloned.value = dir\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix)\n    }\n    return decl.parent.insertBefore(decl, cloned)\n  }\n}\n\nFlexFlow.names = ['flex-flow', 'box-direction', 'box-orient']\n\nmodule.exports = FlexFlow\n","let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass Flex extends Declaration {\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'flex'\n  }\n\n  /**\n   * Return flex property for 2009 and 2012 specs\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2009) {\n      return prefix + 'box-flex'\n    }\n    if (spec === 2012) {\n      return prefix + 'flex-positive'\n    }\n    return super.prefixed(prop, prefix)\n  }\n}\n\nFlex.names = ['flex-grow', 'flex-positive']\n\nmodule.exports = Flex\n","let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass FlexShrink extends Declaration {\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'flex-shrink'\n  }\n\n  /**\n   * Return flex property for 2012 spec\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2012) {\n      return prefix + 'flex-negative'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Ignore 2009 spec and use flex property for 2012\n   */\n  set(decl, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2012 || spec === 'final') {\n      return super.set(decl, prefix)\n    }\n    return undefined\n  }\n}\n\nFlexShrink.names = ['flex-shrink', 'flex-negative']\n\nmodule.exports = FlexShrink\n","/**\n * Return flexbox spec versions by prefix\n */\nmodule.exports = function (prefix) {\n  let spec\n  if (prefix === '-webkit- 2009' || prefix === '-moz-') {\n    spec = 2009\n  } else if (prefix === '-ms-') {\n    spec = 2012\n  } else if (prefix === '-webkit-') {\n    spec = 'final'\n  }\n\n  if (prefix === '-webkit- 2009') {\n    prefix = '-webkit-'\n  }\n\n  return [spec, prefix]\n}\n","let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass FlexWrap extends Declaration {\n  /**\n   * Don't add prefix for 2009 spec\n   */\n  set(decl, prefix) {\n    let spec = flexSpec(prefix)[0]\n    if (spec !== 2009) {\n      return super.set(decl, prefix)\n    }\n    return undefined\n  }\n}\n\nFlexWrap.names = ['flex-wrap']\n\nmodule.exports = FlexWrap\n","let list = require('postcss').list\n\nlet flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass Flex extends Declaration {\n  /**\n   * Change property name for 2009 spec\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2009) {\n      return prefix + 'box-flex'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'flex'\n  }\n\n  /**\n   * Spec 2009 supports only first argument\n   * Spec 2012 disallows unitless basis\n   */\n  set(decl, prefix) {\n    let spec = flexSpec(prefix)[0]\n    if (spec === 2009) {\n      decl.value = list.space(decl.value)[0]\n      decl.value = Flex.oldValues[decl.value] || decl.value\n      return super.set(decl, prefix)\n    }\n    if (spec === 2012) {\n      let components = list.space(decl.value)\n      if (components.length === 3 && components[2] === '0') {\n        decl.value = components.slice(0, 2).concat('0px').join(' ')\n      }\n    }\n    return super.set(decl, prefix)\n  }\n}\n\nFlex.names = ['flex', 'box-flex']\n\nFlex.oldValues = {\n  auto: '1',\n  none: '0'\n}\n\nmodule.exports = Flex\n","let Selector = require('../selector')\n\nclass Fullscreen extends Selector {\n  /**\n   * Return different selectors depend on prefix\n   */\n  prefixed(prefix) {\n    if (prefix === '-webkit-') {\n      return ':-webkit-full-screen'\n    }\n    if (prefix === '-moz-') {\n      return ':-moz-full-screen'\n    }\n    return `:${prefix}fullscreen`\n  }\n}\n\nFullscreen.names = [':fullscreen']\n\nmodule.exports = Fullscreen\n","let parser = require('postcss-value-parser')\nlet range = require('normalize-range')\n\nlet OldValue = require('../old-value')\nlet Value = require('../value')\nlet utils = require('../utils')\n\nlet IS_DIRECTION = /top|left|right|bottom/gi\n\nclass Gradient extends Value {\n  /**\n   * Change degrees for webkit prefix\n   */\n  replace(string, prefix) {\n    let ast = parser(string)\n    for (let node of ast.nodes) {\n      let gradientName = this.name // gradient name\n      if (node.type === 'function' && node.value === gradientName) {\n        node.nodes = this.newDirection(node.nodes)\n        node.nodes = this.normalize(node.nodes, gradientName)\n        if (prefix === '-webkit- old') {\n          let changes = this.oldWebkit(node)\n          if (!changes) {\n            return false\n          }\n        } else {\n          node.nodes = this.convertDirection(node.nodes)\n          node.value = prefix + node.value\n        }\n      }\n    }\n    return ast.toString()\n  }\n\n  /**\n   * Replace first token\n   */\n  replaceFirst(params, ...words) {\n    let prefix = words.map(i => {\n      if (i === ' ') {\n        return { type: 'space', value: i }\n      }\n      return { type: 'word', value: i }\n    })\n    return prefix.concat(params.slice(1))\n  }\n\n  /**\n   * Convert angle unit to deg\n   */\n  normalizeUnit(str, full) {\n    let num = parseFloat(str)\n    let deg = (num / full) * 360\n    return `${deg}deg`\n  }\n\n  /**\n   * Normalize angle\n   */\n  normalize(nodes, gradientName) {\n    if (!nodes[0]) return nodes\n\n    if (/-?\\d+(.\\d+)?grad/.test(nodes[0].value)) {\n      nodes[0].value = this.normalizeUnit(nodes[0].value, 400)\n    } else if (/-?\\d+(.\\d+)?rad/.test(nodes[0].value)) {\n      nodes[0].value = this.normalizeUnit(nodes[0].value, 2 * Math.PI)\n    } else if (/-?\\d+(.\\d+)?turn/.test(nodes[0].value)) {\n      nodes[0].value = this.normalizeUnit(nodes[0].value, 1)\n    } else if (nodes[0].value.includes('deg')) {\n      let num = parseFloat(nodes[0].value)\n      num = range.wrap(0, 360, num)\n      nodes[0].value = `${num}deg`\n    }\n\n    if (\n      gradientName === 'linear-gradient' ||\n      gradientName === 'repeating-linear-gradient'\n    ) {\n      let direction = nodes[0].value\n\n      // Unitless zero for `<angle>` values are allowed in CSS gradients and transforms.\n      // Spec: https://github.com/w3c/csswg-drafts/commit/602789171429b2231223ab1e5acf8f7f11652eb3\n      if (direction === '0deg' || direction === '0') {\n        nodes = this.replaceFirst(nodes, 'to', ' ', 'top')\n      } else if (direction === '90deg') {\n        nodes = this.replaceFirst(nodes, 'to', ' ', 'right')\n      } else if (direction === '180deg') {\n        nodes = this.replaceFirst(nodes, 'to', ' ', 'bottom') // default value\n      } else if (direction === '270deg') {\n        nodes = this.replaceFirst(nodes, 'to', ' ', 'left')\n      }\n    }\n\n    return nodes\n  }\n\n  /**\n   * Replace old direction to new\n   */\n  newDirection(params) {\n    if (params[0].value === 'to') {\n      return params\n    }\n    IS_DIRECTION.lastIndex = 0 // reset search index of global regexp\n    if (!IS_DIRECTION.test(params[0].value)) {\n      return params\n    }\n\n    params.unshift(\n      {\n        type: 'word',\n        value: 'to'\n      },\n      {\n        type: 'space',\n        value: ' '\n      }\n    )\n\n    for (let i = 2; i < params.length; i++) {\n      if (params[i].type === 'div') {\n        break\n      }\n      if (params[i].type === 'word') {\n        params[i].value = this.revertDirection(params[i].value)\n      }\n    }\n\n    return params\n  }\n\n  /**\n   * Look for at word\n   */\n  isRadial(params) {\n    let state = 'before'\n    for (let param of params) {\n      if (state === 'before' && param.type === 'space') {\n        state = 'at'\n      } else if (state === 'at' && param.value === 'at') {\n        state = 'after'\n      } else if (state === 'after' && param.type === 'space') {\n        return true\n      } else if (param.type === 'div') {\n        break\n      } else {\n        state = 'before'\n      }\n    }\n    return false\n  }\n\n  /**\n   * Change new direction to old\n   */\n  convertDirection(params) {\n    if (params.length > 0) {\n      if (params[0].value === 'to') {\n        this.fixDirection(params)\n      } else if (params[0].value.includes('deg')) {\n        this.fixAngle(params)\n      } else if (this.isRadial(params)) {\n        this.fixRadial(params)\n      }\n    }\n    return params\n  }\n\n  /**\n   * Replace `to top left` to `bottom right`\n   */\n  fixDirection(params) {\n    params.splice(0, 2)\n\n    for (let param of params) {\n      if (param.type === 'div') {\n        break\n      }\n      if (param.type === 'word') {\n        param.value = this.revertDirection(param.value)\n      }\n    }\n  }\n\n  /**\n   * Add 90 degrees\n   */\n  fixAngle(params) {\n    let first = params[0].value\n    first = parseFloat(first)\n    first = Math.abs(450 - first) % 360\n    first = this.roundFloat(first, 3)\n    params[0].value = `${first}deg`\n  }\n\n  /**\n   * Fix radial direction syntax\n   */\n  fixRadial(params) {\n    let first = []\n    let second = []\n    let a, b, c, i, next\n\n    for (i = 0; i < params.length - 2; i++) {\n      a = params[i]\n      b = params[i + 1]\n      c = params[i + 2]\n      if (a.type === 'space' && b.value === 'at' && c.type === 'space') {\n        next = i + 3\n        break\n      } else {\n        first.push(a)\n      }\n    }\n\n    let div\n    for (i = next; i < params.length; i++) {\n      if (params[i].type === 'div') {\n        div = params[i]\n        break\n      } else {\n        second.push(params[i])\n      }\n    }\n\n    params.splice(0, i, ...second, div, ...first)\n  }\n\n  revertDirection(word) {\n    return Gradient.directions[word.toLowerCase()] || word\n  }\n\n  /**\n   * Round float and save digits under dot\n   */\n  roundFloat(float, digits) {\n    return parseFloat(float.toFixed(digits))\n  }\n\n  /**\n   * Convert to old webkit syntax\n   */\n  oldWebkit(node) {\n    let { nodes } = node\n    let string = parser.stringify(node.nodes)\n\n    if (this.name !== 'linear-gradient') {\n      return false\n    }\n    if (nodes[0] && nodes[0].value.includes('deg')) {\n      return false\n    }\n    if (\n      string.includes('px') ||\n      string.includes('-corner') ||\n      string.includes('-side')\n    ) {\n      return false\n    }\n\n    let params = [[]]\n    for (let i of nodes) {\n      params[params.length - 1].push(i)\n      if (i.type === 'div' && i.value === ',') {\n        params.push([])\n      }\n    }\n\n    this.oldDirection(params)\n    this.colorStops(params)\n\n    node.nodes = []\n    for (let param of params) {\n      node.nodes = node.nodes.concat(param)\n    }\n\n    node.nodes.unshift(\n      { type: 'word', value: 'linear' },\n      this.cloneDiv(node.nodes)\n    )\n    node.value = '-webkit-gradient'\n\n    return true\n  }\n\n  /**\n   * Change direction syntax to old webkit\n   */\n  oldDirection(params) {\n    let div = this.cloneDiv(params[0])\n\n    if (params[0][0].value !== 'to') {\n      return params.unshift([\n        { type: 'word', value: Gradient.oldDirections.bottom },\n        div\n      ])\n    } else {\n      let words = []\n      for (let node of params[0].slice(2)) {\n        if (node.type === 'word') {\n          words.push(node.value.toLowerCase())\n        }\n      }\n\n      words = words.join(' ')\n      let old = Gradient.oldDirections[words] || words\n\n      params[0] = [{ type: 'word', value: old }, div]\n      return params[0]\n    }\n  }\n\n  /**\n   * Get div token from exists parameters\n   */\n  cloneDiv(params) {\n    for (let i of params) {\n      if (i.type === 'div' && i.value === ',') {\n        return i\n      }\n    }\n    return { type: 'div', value: ',', after: ' ' }\n  }\n\n  /**\n   * Change colors syntax to old webkit\n   */\n  colorStops(params) {\n    let result = []\n    for (let i = 0; i < params.length; i++) {\n      let pos\n      let param = params[i]\n      let item\n      if (i === 0) {\n        continue\n      }\n\n      let color = parser.stringify(param[0])\n      if (param[1] && param[1].type === 'word') {\n        pos = param[1].value\n      } else if (param[2] && param[2].type === 'word') {\n        pos = param[2].value\n      }\n\n      let stop\n      if (i === 1 && (!pos || pos === '0%')) {\n        stop = `from(${color})`\n      } else if (i === params.length - 1 && (!pos || pos === '100%')) {\n        stop = `to(${color})`\n      } else if (pos) {\n        stop = `color-stop(${pos}, ${color})`\n      } else {\n        stop = `color-stop(${color})`\n      }\n\n      let div = param[param.length - 1]\n      params[i] = [{ type: 'word', value: stop }]\n      if (div.type === 'div' && div.value === ',') {\n        item = params[i].push(div)\n      }\n      result.push(item)\n    }\n    return result\n  }\n\n  /**\n   * Remove old WebKit gradient too\n   */\n  old(prefix) {\n    if (prefix === '-webkit-') {\n      let type\n      if (this.name === 'linear-gradient') {\n        type = 'linear'\n      } else if (this.name === 'repeating-linear-gradient') {\n        type = 'repeating-linear'\n      } else if (this.name === 'repeating-radial-gradient') {\n        type = 'repeating-radial'\n      } else {\n        type = 'radial'\n      }\n      let string = '-gradient'\n      let regexp = utils.regexp(\n        `-webkit-(${type}-gradient|gradient\\\\(\\\\s*${type})`,\n        false\n      )\n\n      return new OldValue(this.name, prefix + this.name, string, regexp)\n    } else {\n      return super.old(prefix)\n    }\n  }\n\n  /**\n   * Do not add non-webkit prefixes for list-style and object\n   */\n  add(decl, prefix) {\n    let p = decl.prop\n    if (p.includes('mask')) {\n      if (prefix === '-webkit-' || prefix === '-webkit- old') {\n        return super.add(decl, prefix)\n      }\n    } else if (\n      p === 'list-style' ||\n      p === 'list-style-image' ||\n      p === 'content'\n    ) {\n      if (prefix === '-webkit-' || prefix === '-webkit- old') {\n        return super.add(decl, prefix)\n      }\n    } else {\n      return super.add(decl, prefix)\n    }\n    return undefined\n  }\n}\n\nGradient.names = [\n  'linear-gradient',\n  'repeating-linear-gradient',\n  'radial-gradient',\n  'repeating-radial-gradient'\n]\n\nGradient.directions = {\n  top: 'bottom', // default value\n  left: 'right',\n  bottom: 'top',\n  right: 'left'\n}\n\n// Direction to replace\nGradient.oldDirections = {\n  'top': 'left bottom, left top',\n  'left': 'right top, left top',\n  'bottom': 'left top, left bottom',\n  'right': 'left top, right top',\n\n  'top right': 'left bottom, right top',\n  'top left': 'right bottom, left top',\n  'right top': 'left bottom, right top',\n  'right bottom': 'left top, right bottom',\n  'bottom right': 'left top, right bottom',\n  'bottom left': 'right top, left bottom',\n  'left top': 'right bottom, left top',\n  'left bottom': 'right top, left bottom'\n}\n\nmodule.exports = Gradient\n","let Declaration = require('../declaration')\nlet utils = require('./grid-utils')\n\nclass GridArea extends Declaration {\n  /**\n   * Translate grid-area to separate -ms- prefixed properties\n   */\n  insert(decl, prefix, prefixes, result) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)\n\n    let values = utils.parse(decl)\n\n    let [rowStart, rowSpan] = utils.translate(values, 0, 2)\n    let [columnStart, columnSpan] = utils.translate(values, 1, 3)\n\n    ;[\n      ['grid-row', rowStart],\n      ['grid-row-span', rowSpan],\n      ['grid-column', columnStart],\n      ['grid-column-span', columnSpan]\n    ].forEach(([prop, value]) => {\n      utils.insertDecl(decl, prop, value)\n    })\n\n    utils.warnTemplateSelectorNotFound(decl, result)\n    utils.warnIfGridRowColumnExists(decl, result)\n\n    return undefined\n  }\n}\n\nGridArea.names = ['grid-area']\n\nmodule.exports = GridArea\n","let Declaration = require('../declaration')\n\nclass GridColumnAlign extends Declaration {\n  /**\n   * Do not prefix flexbox values\n   */\n  check(decl) {\n    return !decl.value.includes('flex-') && decl.value !== 'baseline'\n  }\n\n  /**\n   * Change property name for IE\n   */\n  prefixed(prop, prefix) {\n    return prefix + 'grid-column-align'\n  }\n\n  /**\n   * Change IE property back\n   */\n  normalize() {\n    return 'justify-self'\n  }\n}\n\nGridColumnAlign.names = ['grid-column-align']\n\nmodule.exports = GridColumnAlign\n","let Declaration = require('../declaration')\nlet { isPureNumber } = require('../utils')\n\nclass GridEnd extends Declaration {\n  /**\n   * Change repeating syntax for IE\n   */\n  insert(decl, prefix, prefixes, result) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)\n\n    let clonedDecl = this.clone(decl)\n\n    let startProp = decl.prop.replace(/end$/, 'start')\n    let spanProp = prefix + decl.prop.replace(/end$/, 'span')\n\n    if (decl.parent.some(i => i.prop === spanProp)) {\n      return undefined\n    }\n\n    clonedDecl.prop = spanProp\n\n    if (decl.value.includes('span')) {\n      clonedDecl.value = decl.value.replace(/span\\s/i, '')\n    } else {\n      let startDecl\n      decl.parent.walkDecls(startProp, d => {\n        startDecl = d\n      })\n      if (startDecl) {\n        if (isPureNumber(startDecl.value)) {\n          let value = Number(decl.value) - Number(startDecl.value) + ''\n          clonedDecl.value = value\n        } else {\n          return undefined\n        }\n      } else {\n        decl.warn(\n          result,\n          `Can not prefix ${decl.prop} (${startProp} is not found)`\n        )\n      }\n    }\n\n    decl.cloneBefore(clonedDecl)\n\n    return undefined\n  }\n}\n\nGridEnd.names = ['grid-row-end', 'grid-column-end']\n\nmodule.exports = GridEnd\n","let Declaration = require('../declaration')\n\nclass GridRowAlign extends Declaration {\n  /**\n   * Do not prefix flexbox values\n   */\n  check(decl) {\n    return !decl.value.includes('flex-') && decl.value !== 'baseline'\n  }\n\n  /**\n   * Change property name for IE\n   */\n  prefixed(prop, prefix) {\n    return prefix + 'grid-row-align'\n  }\n\n  /**\n   * Change IE property back\n   */\n  normalize() {\n    return 'align-self'\n  }\n}\n\nGridRowAlign.names = ['grid-row-align']\n\nmodule.exports = GridRowAlign\n","let Declaration = require('../declaration')\nlet utils = require('./grid-utils')\n\nclass GridRowColumn extends Declaration {\n  /**\n   * Translate grid-row / grid-column to separate -ms- prefixed properties\n   */\n  insert(decl, prefix, prefixes) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)\n\n    let values = utils.parse(decl)\n    let [start, span] = utils.translate(values, 0, 1)\n\n    let hasStartValueSpan = values[0] && values[0].includes('span')\n\n    if (hasStartValueSpan) {\n      span = values[0].join('').replace(/\\D/g, '')\n    }\n\n    ;[\n      [decl.prop, start],\n      [`${decl.prop}-span`, span]\n    ].forEach(([prop, value]) => {\n      utils.insertDecl(decl, prop, value)\n    })\n\n    return undefined\n  }\n}\n\nGridRowColumn.names = ['grid-row', 'grid-column']\n\nmodule.exports = GridRowColumn\n","let Declaration = require('../declaration')\nlet {\n  prefixTrackProp,\n  prefixTrackValue,\n  autoplaceGridItems,\n  getGridGap,\n  inheritGridGap\n} = require('./grid-utils')\nlet Processor = require('../processor')\n\nclass GridRowsColumns extends Declaration {\n  /**\n   * Change property name for IE\n   */\n  prefixed(prop, prefix) {\n    if (prefix === '-ms-') {\n      return prefixTrackProp({ prop, prefix })\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Change IE property back\n   */\n  normalize(prop) {\n    return prop.replace(/^grid-(rows|columns)/, 'grid-template-$1')\n  }\n\n  insert(decl, prefix, prefixes, result) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)\n\n    let { parent, prop, value } = decl\n    let isRowProp = prop.includes('rows')\n    let isColumnProp = prop.includes('columns')\n\n    let hasGridTemplate = parent.some(\n      i => i.prop === 'grid-template' || i.prop === 'grid-template-areas'\n    )\n\n    /**\n     * Not to prefix rows declaration if grid-template(-areas) is present\n     */\n    if (hasGridTemplate && isRowProp) {\n      return false\n    }\n\n    let processor = new Processor({ options: {} })\n    let status = processor.gridStatus(parent, result)\n    let gap = getGridGap(decl)\n    gap = inheritGridGap(decl, gap) || gap\n\n    let gapValue = isRowProp ? gap.row : gap.column\n\n    if ((status === 'no-autoplace' || status === true) && !hasGridTemplate) {\n      gapValue = null\n    }\n\n    let prefixValue = prefixTrackValue({\n      value,\n      gap: gapValue\n    })\n\n    /**\n     * Insert prefixes\n     */\n    decl.cloneBefore({\n      prop: prefixTrackProp({ prop, prefix }),\n      value: prefixValue\n    })\n\n    let autoflow = parent.nodes.find(i => i.prop === 'grid-auto-flow')\n    let autoflowValue = 'row'\n\n    if (autoflow && !processor.disabled(autoflow, result)) {\n      autoflowValue = autoflow.value.trim()\n    }\n    if (status === 'autoplace') {\n      /**\n       * Show warning if grid-template-rows decl is not found\n       */\n      let rowDecl = parent.nodes.find(i => i.prop === 'grid-template-rows')\n\n      if (!rowDecl && hasGridTemplate) {\n        return undefined\n      } else if (!rowDecl && !hasGridTemplate) {\n        decl.warn(\n          result,\n          'Autoplacement does not work without grid-template-rows property'\n        )\n        return undefined\n      }\n\n      /**\n       * Show warning if grid-template-columns decl is not found\n       */\n      let columnDecl = parent.nodes.find(i => {\n        return i.prop === 'grid-template-columns'\n      })\n      if (!columnDecl && !hasGridTemplate) {\n        decl.warn(\n          result,\n          'Autoplacement does not work without grid-template-columns property'\n        )\n      }\n\n      /**\n       * Autoplace grid items\n       */\n      if (isColumnProp && !hasGridTemplate) {\n        autoplaceGridItems(decl, result, gap, autoflowValue)\n      }\n    }\n\n    return undefined\n  }\n}\n\nGridRowsColumns.names = [\n  'grid-template-rows',\n  'grid-template-columns',\n  'grid-rows',\n  'grid-columns'\n]\n\nmodule.exports = GridRowsColumns\n","let Declaration = require('../declaration')\n\nclass GridStart extends Declaration {\n  /**\n   * Do not add prefix for unsupported value in IE\n   */\n  check(decl) {\n    let value = decl.value\n    return !value.includes('/') && !value.includes('span')\n  }\n\n  /**\n   * Return a final spec property\n   */\n  normalize(prop) {\n    return prop.replace('-start', '')\n  }\n\n  /**\n   * Change property name for IE\n   */\n  prefixed(prop, prefix) {\n    let result = super.prefixed(prop, prefix)\n    if (prefix === '-ms-') {\n      result = result.replace('-start', '')\n    }\n    return result\n  }\n}\n\nGridStart.names = ['grid-row-start', 'grid-column-start']\n\nmodule.exports = GridStart\n","let Declaration = require('../declaration')\nlet {\n  parseGridAreas,\n  warnMissedAreas,\n  prefixTrackProp,\n  prefixTrackValue,\n  getGridGap,\n  warnGridGap,\n  inheritGridGap\n} = require('./grid-utils')\n\nfunction getGridRows(tpl) {\n  return tpl\n    .trim()\n    .slice(1, -1)\n    .split(/[\"']\\s*[\"']?/g)\n}\n\nclass GridTemplateAreas extends Declaration {\n  /**\n   * Translate grid-template-areas to separate -ms- prefixed properties\n   */\n  insert(decl, prefix, prefixes, result) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)\n\n    let hasColumns = false\n    let hasRows = false\n    let parent = decl.parent\n    let gap = getGridGap(decl)\n    gap = inheritGridGap(decl, gap) || gap\n\n    // remove already prefixed rows\n    // to prevent doubling prefixes\n    parent.walkDecls(/-ms-grid-rows/, i => i.remove())\n\n    // add empty tracks to rows\n    parent.walkDecls(/grid-template-(rows|columns)/, trackDecl => {\n      if (trackDecl.prop === 'grid-template-rows') {\n        hasRows = true\n        let { prop, value } = trackDecl\n        trackDecl.cloneBefore({\n          prop: prefixTrackProp({ prop, prefix }),\n          value: prefixTrackValue({ value, gap: gap.row })\n        })\n      } else {\n        hasColumns = true\n      }\n    })\n\n    let gridRows = getGridRows(decl.value)\n\n    if (hasColumns && !hasRows && gap.row && gridRows.length > 1) {\n      decl.cloneBefore({\n        prop: '-ms-grid-rows',\n        value: prefixTrackValue({\n          value: `repeat(${gridRows.length}, auto)`,\n          gap: gap.row\n        }),\n        raws: {}\n      })\n    }\n\n    // warnings\n    warnGridGap({\n      gap,\n      hasColumns,\n      decl,\n      result\n    })\n\n    let areas = parseGridAreas({\n      rows: gridRows,\n      gap\n    })\n\n    warnMissedAreas(areas, decl, result)\n\n    return decl\n  }\n}\n\nGridTemplateAreas.names = ['grid-template-areas']\n\nmodule.exports = GridTemplateAreas\n","let Declaration = require('../declaration')\nlet {\n  parseTemplate,\n  warnMissedAreas,\n  getGridGap,\n  warnGridGap,\n  inheritGridGap\n} = require('./grid-utils')\n\nclass GridTemplate extends Declaration {\n  /**\n   * Translate grid-template to separate -ms- prefixed properties\n   */\n  insert(decl, prefix, prefixes, result) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)\n\n    if (decl.parent.some(i => i.prop === '-ms-grid-rows')) {\n      return undefined\n    }\n\n    let gap = getGridGap(decl)\n\n    /**\n     * we must insert inherited gap values in some cases:\n     * if we are inside media query && if we have no grid-gap value\n     */\n    let inheritedGap = inheritGridGap(decl, gap)\n\n    let { rows, columns, areas } = parseTemplate({\n      decl,\n      gap: inheritedGap || gap\n    })\n\n    let hasAreas = Object.keys(areas).length > 0\n    let hasRows = Boolean(rows)\n    let hasColumns = Boolean(columns)\n\n    warnGridGap({\n      gap,\n      hasColumns,\n      decl,\n      result\n    })\n\n    warnMissedAreas(areas, decl, result)\n\n    if ((hasRows && hasColumns) || hasAreas) {\n      decl.cloneBefore({\n        prop: '-ms-grid-rows',\n        value: rows,\n        raws: {}\n      })\n    }\n\n    if (hasColumns) {\n      decl.cloneBefore({\n        prop: '-ms-grid-columns',\n        value: columns,\n        raws: {}\n      })\n    }\n\n    return decl\n  }\n}\n\nGridTemplate.names = ['grid-template']\n\nmodule.exports = GridTemplate\n","let parser = require('postcss-value-parser')\nlet list = require('postcss').list\n\nlet uniq = require('../utils').uniq\nlet escapeRegexp = require('../utils').escapeRegexp\nlet splitSelector = require('../utils').splitSelector\n\nfunction convert(value) {\n  if (\n    value &&\n    value.length === 2 &&\n    value[0] === 'span' &&\n    parseInt(value[1], 10) > 0\n  ) {\n    return [false, parseInt(value[1], 10)]\n  }\n\n  if (value && value.length === 1 && parseInt(value[0], 10) > 0) {\n    return [parseInt(value[0], 10), false]\n  }\n\n  return [false, false]\n}\n\nexports.translate = translate\n\nfunction translate(values, startIndex, endIndex) {\n  let startValue = values[startIndex]\n  let endValue = values[endIndex]\n\n  if (!startValue) {\n    return [false, false]\n  }\n\n  let [start, spanStart] = convert(startValue)\n  let [end, spanEnd] = convert(endValue)\n\n  if (start && !endValue) {\n    return [start, false]\n  }\n\n  if (spanStart && end) {\n    return [end - spanStart, spanStart]\n  }\n\n  if (start && spanEnd) {\n    return [start, spanEnd]\n  }\n\n  if (start && end) {\n    return [start, end - start]\n  }\n\n  return [false, false]\n}\n\nexports.parse = parse\n\nfunction parse(decl) {\n  let node = parser(decl.value)\n\n  let values = []\n  let current = 0\n  values[current] = []\n\n  for (let i of node.nodes) {\n    if (i.type === 'div') {\n      current += 1\n      values[current] = []\n    } else if (i.type === 'word') {\n      values[current].push(i.value)\n    }\n  }\n\n  return values\n}\n\nexports.insertDecl = insertDecl\n\nfunction insertDecl(decl, prop, value) {\n  if (value && !decl.parent.some(i => i.prop === `-ms-${prop}`)) {\n    decl.cloneBefore({\n      prop: `-ms-${prop}`,\n      value: value.toString()\n    })\n  }\n}\n\n// Track transforms\n\nexports.prefixTrackProp = prefixTrackProp\n\nfunction prefixTrackProp({ prop, prefix }) {\n  return prefix + prop.replace('template-', '')\n}\n\nfunction transformRepeat({ nodes }, { gap }) {\n  let { count, size } = nodes.reduce(\n    (result, node) => {\n      if (node.type === 'div' && node.value === ',') {\n        result.key = 'size'\n      } else {\n        result[result.key].push(parser.stringify(node))\n      }\n      return result\n    },\n    {\n      key: 'count',\n      size: [],\n      count: []\n    }\n  )\n\n  // insert gap values\n  if (gap) {\n    size = size.filter(i => i.trim())\n    let val = []\n    for (let i = 1; i <= count; i++) {\n      size.forEach((item, index) => {\n        if (index > 0 || i > 1) {\n          val.push(gap)\n        }\n        val.push(item)\n      })\n    }\n\n    return val.join(' ')\n  }\n\n  return `(${size.join('')})[${count.join('')}]`\n}\n\nexports.prefixTrackValue = prefixTrackValue\n\nfunction prefixTrackValue({ value, gap }) {\n  let result = parser(value).nodes.reduce((nodes, node) => {\n    if (node.type === 'function' && node.value === 'repeat') {\n      return nodes.concat({\n        type: 'word',\n        value: transformRepeat(node, { gap })\n      })\n    }\n    if (gap && node.type === 'space') {\n      return nodes.concat(\n        {\n          type: 'space',\n          value: ' '\n        },\n        {\n          type: 'word',\n          value: gap\n        },\n        node\n      )\n    }\n    return nodes.concat(node)\n  }, [])\n\n  return parser.stringify(result)\n}\n\n// Parse grid-template-areas\n\nlet DOTS = /^\\.+$/\n\nfunction track(start, end) {\n  return { start, end, span: end - start }\n}\n\nfunction getColumns(line) {\n  return line.trim().split(/\\s+/g)\n}\n\nexports.parseGridAreas = parseGridAreas\n\nfunction parseGridAreas({ rows, gap }) {\n  return rows.reduce((areas, line, rowIndex) => {\n    if (gap.row) rowIndex *= 2\n\n    if (line.trim() === '') return areas\n\n    getColumns(line).forEach((area, columnIndex) => {\n      if (DOTS.test(area)) return\n\n      if (gap.column) columnIndex *= 2\n\n      if (typeof areas[area] === 'undefined') {\n        areas[area] = {\n          column: track(columnIndex + 1, columnIndex + 2),\n          row: track(rowIndex + 1, rowIndex + 2)\n        }\n      } else {\n        let { column, row } = areas[area]\n\n        column.start = Math.min(column.start, columnIndex + 1)\n        column.end = Math.max(column.end, columnIndex + 2)\n        column.span = column.end - column.start\n\n        row.start = Math.min(row.start, rowIndex + 1)\n        row.end = Math.max(row.end, rowIndex + 2)\n        row.span = row.end - row.start\n      }\n    })\n\n    return areas\n  }, {})\n}\n\n// Parse grid-template\n\nfunction testTrack(node) {\n  return node.type === 'word' && /^\\[.+]$/.test(node.value)\n}\n\nfunction verifyRowSize(result) {\n  if (result.areas.length > result.rows.length) {\n    result.rows.push('auto')\n  }\n  return result\n}\n\nexports.parseTemplate = parseTemplate\n\nfunction parseTemplate({ decl, gap }) {\n  let gridTemplate = parser(decl.value).nodes.reduce(\n    (result, node) => {\n      let { type, value } = node\n\n      if (testTrack(node) || type === 'space') return result\n\n      // area\n      if (type === 'string') {\n        result = verifyRowSize(result)\n        result.areas.push(value)\n      }\n\n      // values and function\n      if (type === 'word' || type === 'function') {\n        result[result.key].push(parser.stringify(node))\n      }\n\n      // divider(/)\n      if (type === 'div' && value === '/') {\n        result.key = 'columns'\n        result = verifyRowSize(result)\n      }\n\n      return result\n    },\n    {\n      key: 'rows',\n      columns: [],\n      rows: [],\n      areas: []\n    }\n  )\n\n  return {\n    areas: parseGridAreas({\n      rows: gridTemplate.areas,\n      gap\n    }),\n    columns: prefixTrackValue({\n      value: gridTemplate.columns.join(' '),\n      gap: gap.column\n    }),\n    rows: prefixTrackValue({\n      value: gridTemplate.rows.join(' '),\n      gap: gap.row\n    })\n  }\n}\n\n// Insert parsed grid areas\n\n/**\n * Get an array of -ms- prefixed props and values\n * @param  {Object} [area] area object with column and row data\n * @param  {Boolean} [addRowSpan] should we add grid-column-row value?\n * @param  {Boolean} [addColumnSpan] should we add grid-column-span value?\n * @return {Array<Object>}\n */\nfunction getMSDecls(area, addRowSpan = false, addColumnSpan = false) {\n  let result = [\n    {\n      prop: '-ms-grid-row',\n      value: String(area.row.start)\n    }\n  ]\n  if (area.row.span > 1 || addRowSpan) {\n    result.push({\n      prop: '-ms-grid-row-span',\n      value: String(area.row.span)\n    })\n  }\n  result.push({\n    prop: '-ms-grid-column',\n    value: String(area.column.start)\n  })\n  if (area.column.span > 1 || addColumnSpan) {\n    result.push({\n      prop: '-ms-grid-column-span',\n      value: String(area.column.span)\n    })\n  }\n  return result\n}\n\nfunction getParentMedia(parent) {\n  if (parent.type === 'atrule' && parent.name === 'media') {\n    return parent\n  }\n  if (!parent.parent) {\n    return false\n  }\n  return getParentMedia(parent.parent)\n}\n\n/**\n * change selectors for rules with duplicate grid-areas.\n * @param  {Array<Rule>} rules\n * @param  {Array<String>} templateSelectors\n * @return {Array<Rule>} rules with changed selectors\n */\nfunction changeDuplicateAreaSelectors(ruleSelectors, templateSelectors) {\n  ruleSelectors = ruleSelectors.map(selector => {\n    let selectorBySpace = list.space(selector)\n    let selectorByComma = list.comma(selector)\n\n    if (selectorBySpace.length > selectorByComma.length) {\n      selector = selectorBySpace.slice(-1).join('')\n    }\n    return selector\n  })\n\n  return ruleSelectors.map(ruleSelector => {\n    let newSelector = templateSelectors.map((tplSelector, index) => {\n      let space = index === 0 ? '' : ' '\n      return `${space}${tplSelector} > ${ruleSelector}`\n    })\n\n    return newSelector\n  })\n}\n\n/**\n * check if selector of rules are equal\n * @param  {Rule} ruleA\n * @param  {Rule} ruleB\n * @return {Boolean}\n */\nfunction selectorsEqual(ruleA, ruleB) {\n  return ruleA.selectors.some(sel => {\n    return ruleB.selectors.includes(sel)\n  })\n}\n\n/**\n * Parse data from all grid-template(-areas) declarations\n * @param  {Root} css css root\n * @return {Object} parsed data\n */\nfunction parseGridTemplatesData(css) {\n  let parsed = []\n\n  // we walk through every grid-template(-areas) declaration and store\n  // data with the same area names inside the item\n  css.walkDecls(/grid-template(-areas)?$/, d => {\n    let rule = d.parent\n    let media = getParentMedia(rule)\n    let gap = getGridGap(d)\n    let inheritedGap = inheritGridGap(d, gap)\n    let { areas } = parseTemplate({ decl: d, gap: inheritedGap || gap })\n    let areaNames = Object.keys(areas)\n\n    // skip node if it doesn't have areas\n    if (areaNames.length === 0) {\n      return true\n    }\n\n    // check parsed array for item that include the same area names\n    // return index of that item\n    let index = parsed.reduce((acc, { allAreas }, idx) => {\n      let hasAreas = allAreas && areaNames.some(area => allAreas.includes(area))\n      return hasAreas ? idx : acc\n    }, null)\n\n    if (index !== null) {\n      // index is found, add the grid-template data to that item\n      let { allAreas, rules } = parsed[index]\n\n      // check if rule has no duplicate area names\n      let hasNoDuplicates = rules.some(r => {\n        return r.hasDuplicates === false && selectorsEqual(r, rule)\n      })\n\n      let duplicatesFound = false\n\n      // check need to gather all duplicate area names\n      let duplicateAreaNames = rules.reduce((acc, r) => {\n        if (!r.params && selectorsEqual(r, rule)) {\n          duplicatesFound = true\n          return r.duplicateAreaNames\n        }\n        if (!duplicatesFound) {\n          areaNames.forEach(name => {\n            if (r.areas[name]) {\n              acc.push(name)\n            }\n          })\n        }\n        return uniq(acc)\n      }, [])\n\n      // update grid-row/column-span values for areas with duplicate\n      // area names. @see #1084 and #1146\n      rules.forEach(r => {\n        areaNames.forEach(name => {\n          let area = r.areas[name]\n          if (area && area.row.span !== areas[name].row.span) {\n            areas[name].row.updateSpan = true\n          }\n\n          if (area && area.column.span !== areas[name].column.span) {\n            areas[name].column.updateSpan = true\n          }\n        })\n      })\n\n      parsed[index].allAreas = uniq([...allAreas, ...areaNames])\n      parsed[index].rules.push({\n        hasDuplicates: !hasNoDuplicates,\n        params: media.params,\n        selectors: rule.selectors,\n        node: rule,\n        duplicateAreaNames,\n        areas\n      })\n    } else {\n      // index is NOT found, push the new item to the parsed array\n      parsed.push({\n        allAreas: areaNames,\n        areasCount: 0,\n        rules: [\n          {\n            hasDuplicates: false,\n            duplicateRules: [],\n            params: media.params,\n            selectors: rule.selectors,\n            node: rule,\n            duplicateAreaNames: [],\n            areas\n          }\n        ]\n      })\n    }\n\n    return undefined\n  })\n\n  return parsed\n}\n\n/**\n * insert prefixed grid-area declarations\n * @param  {Root}  css css root\n * @param  {Function} isDisabled check if the rule is disabled\n * @return {void}\n */\nexports.insertAreas = insertAreas\n\nfunction insertAreas(css, isDisabled) {\n  // parse grid-template declarations\n  let gridTemplatesData = parseGridTemplatesData(css)\n\n  // return undefined if no declarations found\n  if (gridTemplatesData.length === 0) {\n    return undefined\n  }\n\n  // we need to store the rules that we will insert later\n  let rulesToInsert = {}\n\n  css.walkDecls('grid-area', gridArea => {\n    let gridAreaRule = gridArea.parent\n    let hasPrefixedRow = gridAreaRule.first.prop === '-ms-grid-row'\n    let gridAreaMedia = getParentMedia(gridAreaRule)\n\n    if (isDisabled(gridArea)) {\n      return undefined\n    }\n\n    let gridAreaRuleIndex = css.index(gridAreaMedia || gridAreaRule)\n\n    let value = gridArea.value\n    // found the data that matches grid-area identifier\n    let data = gridTemplatesData.filter(d => d.allAreas.includes(value))[0]\n\n    if (!data) {\n      return true\n    }\n\n    let lastArea = data.allAreas[data.allAreas.length - 1]\n    let selectorBySpace = list.space(gridAreaRule.selector)\n    let selectorByComma = list.comma(gridAreaRule.selector)\n    let selectorIsComplex =\n      selectorBySpace.length > 1 &&\n      selectorBySpace.length > selectorByComma.length\n\n    // prevent doubling of prefixes\n    if (hasPrefixedRow) {\n      return false\n    }\n\n    // create the empty object with the key as the last area name\n    // e.g if we have templates with \"a b c\" values, \"c\" will be the last area\n    if (!rulesToInsert[lastArea]) {\n      rulesToInsert[lastArea] = {}\n    }\n\n    let lastRuleIsSet = false\n\n    // walk through every grid-template rule data\n    for (let rule of data.rules) {\n      let area = rule.areas[value]\n      let hasDuplicateName = rule.duplicateAreaNames.includes(value)\n\n      // if we can't find the area name, update lastRule and continue\n      if (!area) {\n        let lastRule = rulesToInsert[lastArea].lastRule\n        let lastRuleIndex\n        if (lastRule) {\n          lastRuleIndex = css.index(lastRule)\n        } else {\n          /* c8 ignore next 2 */\n          lastRuleIndex = -1\n        }\n\n        if (gridAreaRuleIndex > lastRuleIndex) {\n          rulesToInsert[lastArea].lastRule = gridAreaMedia || gridAreaRule\n        }\n        continue\n      }\n\n      // for grid-templates inside media rule we need to create empty\n      // array to push prefixed grid-area rules later\n      if (rule.params && !rulesToInsert[lastArea][rule.params]) {\n        rulesToInsert[lastArea][rule.params] = []\n      }\n\n      if ((!rule.hasDuplicates || !hasDuplicateName) && !rule.params) {\n        // grid-template has no duplicates and not inside media rule\n\n        getMSDecls(area, false, false)\n          .reverse()\n          .forEach(i =>\n            gridAreaRule.prepend(\n              Object.assign(i, {\n                raws: {\n                  between: gridArea.raws.between\n                }\n              })\n            )\n          )\n\n        rulesToInsert[lastArea].lastRule = gridAreaRule\n        lastRuleIsSet = true\n      } else if (rule.hasDuplicates && !rule.params && !selectorIsComplex) {\n        // grid-template has duplicates and not inside media rule\n        let cloned = gridAreaRule.clone()\n        cloned.removeAll()\n\n        getMSDecls(area, area.row.updateSpan, area.column.updateSpan)\n          .reverse()\n          .forEach(i =>\n            cloned.prepend(\n              Object.assign(i, {\n                raws: {\n                  between: gridArea.raws.between\n                }\n              })\n            )\n          )\n\n        cloned.selectors = changeDuplicateAreaSelectors(\n          cloned.selectors,\n          rule.selectors\n        )\n\n        if (rulesToInsert[lastArea].lastRule) {\n          rulesToInsert[lastArea].lastRule.after(cloned)\n        }\n        rulesToInsert[lastArea].lastRule = cloned\n        lastRuleIsSet = true\n      } else if (\n        rule.hasDuplicates &&\n        !rule.params &&\n        selectorIsComplex &&\n        gridAreaRule.selector.includes(rule.selectors[0])\n      ) {\n        // grid-template has duplicates and not inside media rule\n        // and the selector is complex\n        gridAreaRule.walkDecls(/-ms-grid-(row|column)/, d => d.remove())\n        getMSDecls(area, area.row.updateSpan, area.column.updateSpan)\n          .reverse()\n          .forEach(i =>\n            gridAreaRule.prepend(\n              Object.assign(i, {\n                raws: {\n                  between: gridArea.raws.between\n                }\n              })\n            )\n          )\n      } else if (rule.params) {\n        // grid-template is inside media rule\n        // if we're inside media rule, we need to store prefixed rules\n        // inside rulesToInsert object to be able to preserve the order of media\n        // rules and merge them easily\n        let cloned = gridAreaRule.clone()\n        cloned.removeAll()\n\n        getMSDecls(area, area.row.updateSpan, area.column.updateSpan)\n          .reverse()\n          .forEach(i =>\n            cloned.prepend(\n              Object.assign(i, {\n                raws: {\n                  between: gridArea.raws.between\n                }\n              })\n            )\n          )\n\n        if (rule.hasDuplicates && hasDuplicateName) {\n          cloned.selectors = changeDuplicateAreaSelectors(\n            cloned.selectors,\n            rule.selectors\n          )\n        }\n\n        cloned.raws = rule.node.raws\n\n        if (css.index(rule.node.parent) > gridAreaRuleIndex) {\n          // append the prefixed rules right inside media rule\n          // with grid-template\n          rule.node.parent.append(cloned)\n        } else {\n          // store the rule to insert later\n          rulesToInsert[lastArea][rule.params].push(cloned)\n        }\n\n        // set new rule as last rule ONLY if we didn't set lastRule for\n        // this grid-area before\n        if (!lastRuleIsSet) {\n          rulesToInsert[lastArea].lastRule = gridAreaMedia || gridAreaRule\n        }\n      }\n    }\n\n    return undefined\n  })\n\n  // append stored rules inside the media rules\n  Object.keys(rulesToInsert).forEach(area => {\n    let data = rulesToInsert[area]\n    let lastRule = data.lastRule\n    Object.keys(data)\n      .reverse()\n      .filter(p => p !== 'lastRule')\n      .forEach(params => {\n        if (data[params].length > 0 && lastRule) {\n          lastRule.after({ name: 'media', params })\n          lastRule.next().append(data[params])\n        }\n      })\n  })\n\n  return undefined\n}\n\n/**\n * Warn user if grid area identifiers are not found\n * @param  {Object} areas\n * @param  {Declaration} decl\n * @param  {Result} result\n * @return {void}\n */\nexports.warnMissedAreas = warnMissedAreas\n\nfunction warnMissedAreas(areas, decl, result) {\n  let missed = Object.keys(areas)\n\n  decl.root().walkDecls('grid-area', gridArea => {\n    missed = missed.filter(e => e !== gridArea.value)\n  })\n\n  if (missed.length > 0) {\n    decl.warn(result, 'Can not find grid areas: ' + missed.join(', '))\n  }\n\n  return undefined\n}\n\n/**\n * compare selectors with grid-area rule and grid-template rule\n * show warning if grid-template selector is not found\n * (this function used for grid-area rule)\n * @param  {Declaration} decl\n * @param  {Result} result\n * @return {void}\n */\nexports.warnTemplateSelectorNotFound = warnTemplateSelectorNotFound\n\nfunction warnTemplateSelectorNotFound(decl, result) {\n  let rule = decl.parent\n  let root = decl.root()\n  let duplicatesFound = false\n\n  // slice selector array. Remove the last part (for comparison)\n  let slicedSelectorArr = list\n    .space(rule.selector)\n    .filter(str => str !== '>')\n    .slice(0, -1)\n\n  // we need to compare only if selector is complex.\n  // e.g '.grid-cell' is simple, but '.parent > .grid-cell' is complex\n  if (slicedSelectorArr.length > 0) {\n    let gridTemplateFound = false\n    let foundAreaSelector = null\n\n    root.walkDecls(/grid-template(-areas)?$/, d => {\n      let parent = d.parent\n      let templateSelectors = parent.selectors\n\n      let { areas } = parseTemplate({ decl: d, gap: getGridGap(d) })\n      let hasArea = areas[decl.value]\n\n      // find the the matching selectors\n      for (let tplSelector of templateSelectors) {\n        if (gridTemplateFound) {\n          break\n        }\n        let tplSelectorArr = list.space(tplSelector).filter(str => str !== '>')\n\n        gridTemplateFound = tplSelectorArr.every(\n          (item, idx) => item === slicedSelectorArr[idx]\n        )\n      }\n\n      if (gridTemplateFound || !hasArea) {\n        return true\n      }\n\n      if (!foundAreaSelector) {\n        foundAreaSelector = parent.selector\n      }\n\n      // if we found the duplicate area with different selector\n      if (foundAreaSelector && foundAreaSelector !== parent.selector) {\n        duplicatesFound = true\n      }\n\n      return undefined\n    })\n\n    // warn user if we didn't find template\n    if (!gridTemplateFound && duplicatesFound) {\n      decl.warn(\n        result,\n        'Autoprefixer cannot find a grid-template ' +\n          `containing the duplicate grid-area \"${decl.value}\" ` +\n          `with full selector matching: ${slicedSelectorArr.join(' ')}`\n      )\n    }\n  }\n}\n\n/**\n * warn user if both grid-area and grid-(row|column)\n * declarations are present in the same rule\n * @param  {Declaration} decl\n * @param  {Result} result\n * @return {void}\n */\nexports.warnIfGridRowColumnExists = warnIfGridRowColumnExists\n\nfunction warnIfGridRowColumnExists(decl, result) {\n  let rule = decl.parent\n  let decls = []\n  rule.walkDecls(/^grid-(row|column)/, d => {\n    if (\n      !d.prop.endsWith('-end') &&\n      !d.value.startsWith('span') &&\n      !d.prop.endsWith('-gap')\n    ) {\n      decls.push(d)\n    }\n  })\n  if (decls.length > 0) {\n    decls.forEach(d => {\n      d.warn(\n        result,\n        'You already have a grid-area declaration present in the rule. ' +\n          `You should use either grid-area or ${d.prop}, not both`\n      )\n    })\n  }\n\n  return undefined\n}\n\n// Gap utils\n\nexports.getGridGap = getGridGap\n\nfunction getGridGap(decl) {\n  let gap = {}\n\n  // try to find gap\n  let testGap = /^(grid-)?((row|column)-)?gap$/\n  decl.parent.walkDecls(testGap, ({ prop, value }) => {\n    if (/^(grid-)?gap$/.test(prop)) {\n      let [row, , column] = parser(value).nodes\n\n      gap.row = row && parser.stringify(row)\n      gap.column = column ? parser.stringify(column) : gap.row\n    }\n    if (/^(grid-)?row-gap$/.test(prop)) gap.row = value\n    if (/^(grid-)?column-gap$/.test(prop)) gap.column = value\n  })\n\n  return gap\n}\n\n/**\n * parse media parameters (for example 'min-width: 500px')\n * @param  {String} params parameter to parse\n * @return {}\n */\nfunction parseMediaParams(params) {\n  if (!params) {\n    return []\n  }\n  let parsed = parser(params)\n  let prop\n  let value\n\n  parsed.walk(node => {\n    if (node.type === 'word' && /min|max/g.test(node.value)) {\n      prop = node.value\n    } else if (node.value.includes('px')) {\n      value = parseInt(node.value.replace(/\\D/g, ''))\n    }\n  })\n\n  return [prop, value]\n}\n\n/**\n * Compare the selectors and decide if we\n * need to inherit gap from compared selector or not.\n * @type {String} selA\n * @type {String} selB\n * @return {Boolean}\n */\nfunction shouldInheritGap(selA, selB) {\n  let result\n\n  // get arrays of selector split in 3-deep array\n  let splitSelectorArrA = splitSelector(selA)\n  let splitSelectorArrB = splitSelector(selB)\n\n  if (splitSelectorArrA[0].length < splitSelectorArrB[0].length) {\n    // abort if selectorA has lower descendant specificity then selectorB\n    // (e.g '.grid' and '.hello .world .grid')\n    return false\n  } else if (splitSelectorArrA[0].length > splitSelectorArrB[0].length) {\n    // if selectorA has higher descendant specificity then selectorB\n    // (e.g '.foo .bar .grid' and '.grid')\n\n    let idx = splitSelectorArrA[0].reduce((res, [item], index) => {\n      let firstSelectorPart = splitSelectorArrB[0][0][0]\n      if (item === firstSelectorPart) {\n        return index\n      }\n      return false\n    }, false)\n\n    if (idx) {\n      result = splitSelectorArrB[0].every((arr, index) => {\n        return arr.every(\n          (part, innerIndex) =>\n            // because selectorA has more space elements, we need to slice\n            // selectorA array by 'idx' number to compare them\n            splitSelectorArrA[0].slice(idx)[index][innerIndex] === part\n        )\n      })\n    }\n  } else {\n    // if selectorA has the same descendant specificity as selectorB\n    // this condition covers cases such as: '.grid.foo.bar' and '.grid'\n    result = splitSelectorArrB.some(byCommaArr => {\n      return byCommaArr.every((bySpaceArr, index) => {\n        return bySpaceArr.every(\n          (part, innerIndex) => splitSelectorArrA[0][index][innerIndex] === part\n        )\n      })\n    })\n  }\n\n  return result\n}\n/**\n * inherit grid gap values from the closest rule above\n * with the same selector\n * @param  {Declaration} decl\n * @param  {Object} gap gap values\n * @return {Object | Boolean} return gap values or false (if not found)\n */\nexports.inheritGridGap = inheritGridGap\n\nfunction inheritGridGap(decl, gap) {\n  let rule = decl.parent\n  let mediaRule = getParentMedia(rule)\n  let root = rule.root()\n\n  // get an array of selector split in 3-deep array\n  let splitSelectorArr = splitSelector(rule.selector)\n\n  // abort if the rule already has gaps\n  if (Object.keys(gap).length > 0) {\n    return false\n  }\n\n  // e.g ['min-width']\n  let [prop] = parseMediaParams(mediaRule.params)\n\n  let lastBySpace = splitSelectorArr[0]\n\n  // get escaped value from the selector\n  // if we have '.grid-2.foo.bar' selector, will be '\\.grid\\-2'\n  let escaped = escapeRegexp(lastBySpace[lastBySpace.length - 1][0])\n\n  let regexp = new RegExp(`(${escaped}$)|(${escaped}[,.])`)\n\n  // find the closest rule with the same selector\n  let closestRuleGap\n  root.walkRules(regexp, r => {\n    let gridGap\n\n    // abort if are checking the same rule\n    if (rule.toString() === r.toString()) {\n      return false\n    }\n\n    // find grid-gap values\n    r.walkDecls('grid-gap', d => (gridGap = getGridGap(d)))\n\n    // skip rule without gaps\n    if (!gridGap || Object.keys(gridGap).length === 0) {\n      return true\n    }\n\n    // skip rules that should not be inherited from\n    if (!shouldInheritGap(rule.selector, r.selector)) {\n      return true\n    }\n\n    let media = getParentMedia(r)\n    if (media) {\n      // if we are inside media, we need to check that media props match\n      // e.g ('min-width' === 'min-width')\n      let propToCompare = parseMediaParams(media.params)[0]\n      if (propToCompare === prop) {\n        closestRuleGap = gridGap\n        return true\n      }\n    } else {\n      closestRuleGap = gridGap\n      return true\n    }\n\n    return undefined\n  })\n\n  // if we find the closest gap object\n  if (closestRuleGap && Object.keys(closestRuleGap).length > 0) {\n    return closestRuleGap\n  }\n  return false\n}\n\nexports.warnGridGap = warnGridGap\n\nfunction warnGridGap({ gap, hasColumns, decl, result }) {\n  let hasBothGaps = gap.row && gap.column\n  if (!hasColumns && (hasBothGaps || (gap.column && !gap.row))) {\n    delete gap.column\n    decl.warn(\n      result,\n      'Can not implement grid-gap without grid-template-columns'\n    )\n  }\n}\n\n/**\n * normalize the grid-template-rows/columns values\n * @param  {String} str grid-template-rows/columns value\n * @return {Array} normalized array with values\n * @example\n * let normalized = normalizeRowColumn('1fr repeat(2, 20px 50px) 1fr')\n * normalized // <= ['1fr', '20px', '50px', '20px', '50px', '1fr']\n */\nfunction normalizeRowColumn(str) {\n  let normalized = parser(str).nodes.reduce((result, node) => {\n    if (node.type === 'function' && node.value === 'repeat') {\n      let key = 'count'\n\n      let [count, value] = node.nodes.reduce(\n        (acc, n) => {\n          if (n.type === 'word' && key === 'count') {\n            acc[0] = Math.abs(parseInt(n.value))\n            return acc\n          }\n          if (n.type === 'div' && n.value === ',') {\n            key = 'value'\n            return acc\n          }\n          if (key === 'value') {\n            acc[1] += parser.stringify(n)\n          }\n          return acc\n        },\n        [0, '']\n      )\n\n      if (count) {\n        for (let i = 0; i < count; i++) {\n          result.push(value)\n        }\n      }\n\n      return result\n    }\n    if (node.type === 'space') {\n      return result\n    }\n    return result.concat(parser.stringify(node))\n  }, [])\n\n  return normalized\n}\n\nexports.autoplaceGridItems = autoplaceGridItems\n\n/**\n * Autoplace grid items\n * @param {Declaration} decl\n * @param {Result} result\n * @param {Object} gap gap values\n * @param {String} autoflowValue grid-auto-flow value\n * @return {void}\n * @see https://github.com/postcss/autoprefixer/issues/1148\n */\nfunction autoplaceGridItems(decl, result, gap, autoflowValue = 'row') {\n  let { parent } = decl\n\n  let rowDecl = parent.nodes.find(i => i.prop === 'grid-template-rows')\n  let rows = normalizeRowColumn(rowDecl.value)\n  let columns = normalizeRowColumn(decl.value)\n\n  // Build array of area names with dummy values. If we have 3 columns and\n  // 2 rows, filledRows will be equal to ['1 2 3', '4 5 6']\n  let filledRows = rows.map((_, rowIndex) => {\n    return Array.from(\n      { length: columns.length },\n      (v, k) => k + rowIndex * columns.length + 1\n    ).join(' ')\n  })\n\n  let areas = parseGridAreas({ rows: filledRows, gap })\n  let keys = Object.keys(areas)\n  let items = keys.map(i => areas[i])\n\n  // Change the order of cells if grid-auto-flow value is 'column'\n  if (autoflowValue.includes('column')) {\n    items = items.sort((a, b) => a.column.start - b.column.start)\n  }\n\n  // Insert new rules\n  items.reverse().forEach((item, index) => {\n    let { column, row } = item\n    let nodeSelector = parent.selectors\n      .map(sel => sel + ` > *:nth-child(${keys.length - index})`)\n      .join(', ')\n\n    // create new rule\n    let node = parent.clone().removeAll()\n\n    // change rule selector\n    node.selector = nodeSelector\n\n    // insert prefixed row/column values\n    node.append({ prop: '-ms-grid-row', value: row.start })\n    node.append({ prop: '-ms-grid-column', value: column.start })\n\n    // insert rule\n    parent.after(node)\n  })\n\n  return undefined\n}\n","let Declaration = require('../declaration')\n\nclass ImageRendering extends Declaration {\n  /**\n   * Add hack only for crisp-edges\n   */\n  check(decl) {\n    return decl.value === 'pixelated'\n  }\n\n  /**\n   * Change property name for IE\n   */\n  prefixed(prop, prefix) {\n    if (prefix === '-ms-') {\n      return '-ms-interpolation-mode'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Change property and value for IE\n   */\n  set(decl, prefix) {\n    if (prefix !== '-ms-') return super.set(decl, prefix)\n    decl.prop = '-ms-interpolation-mode'\n    decl.value = 'nearest-neighbor'\n    return decl\n  }\n\n  /**\n   * Return property name by spec\n   */\n  normalize() {\n    return 'image-rendering'\n  }\n\n  /**\n   * Warn on old value\n   */\n  process(node, result) {\n    return super.process(node, result)\n  }\n}\n\nImageRendering.names = ['image-rendering', 'interpolation-mode']\n\nmodule.exports = ImageRendering\n","let Value = require('../value')\n\nclass ImageSet extends Value {\n  /**\n   * Use non-standard name for WebKit and Firefox\n   */\n  replace(string, prefix) {\n    let fixed = super.replace(string, prefix)\n    if (prefix === '-webkit-') {\n      fixed = fixed.replace(/(\"[^\"]+\"|'[^']+')(\\s+\\d+\\w)/gi, 'url($1)$2')\n    }\n    return fixed\n  }\n}\n\nImageSet.names = ['image-set']\n\nmodule.exports = ImageSet\n","let Declaration = require('../declaration')\n\nclass InlineLogical extends Declaration {\n  /**\n   * Use old syntax for -moz- and -webkit-\n   */\n  prefixed(prop, prefix) {\n    return prefix + prop.replace('-inline', '')\n  }\n\n  /**\n   * Return property name by spec\n   */\n  normalize(prop) {\n    return prop.replace(/(margin|padding|border)-(start|end)/, '$1-inline-$2')\n  }\n}\n\nInlineLogical.names = [\n  'border-inline-start',\n  'border-inline-end',\n  'margin-inline-start',\n  'margin-inline-end',\n  'padding-inline-start',\n  'padding-inline-end',\n  'border-start',\n  'border-end',\n  'margin-start',\n  'margin-end',\n  'padding-start',\n  'padding-end'\n]\n\nmodule.exports = InlineLogical\n","let OldValue = require('../old-value')\nlet Value = require('../value')\n\nfunction regexp(name) {\n  return new RegExp(`(^|[\\\\s,(])(${name}($|[\\\\s),]))`, 'gi')\n}\n\nclass Intrinsic extends Value {\n  regexp() {\n    if (!this.regexpCache) this.regexpCache = regexp(this.name)\n    return this.regexpCache\n  }\n\n  isStretch() {\n    return (\n      this.name === 'stretch' ||\n      this.name === 'fill' ||\n      this.name === 'fill-available'\n    )\n  }\n\n  replace(string, prefix) {\n    if (prefix === '-moz-' && this.isStretch()) {\n      return string.replace(this.regexp(), '$1-moz-available$3')\n    }\n    if (prefix === '-webkit-' && this.isStretch()) {\n      return string.replace(this.regexp(), '$1-webkit-fill-available$3')\n    }\n    return super.replace(string, prefix)\n  }\n\n  old(prefix) {\n    let prefixed = prefix + this.name\n    if (this.isStretch()) {\n      if (prefix === '-moz-') {\n        prefixed = '-moz-available'\n      } else if (prefix === '-webkit-') {\n        prefixed = '-webkit-fill-available'\n      }\n    }\n    return new OldValue(this.name, prefixed, prefixed, regexp(prefixed))\n  }\n\n  add(decl, prefix) {\n    if (decl.prop.includes('grid') && prefix !== '-webkit-') {\n      return undefined\n    }\n    return super.add(decl, prefix)\n  }\n}\n\nIntrinsic.names = [\n  'max-content',\n  'min-content',\n  'fit-content',\n  'fill',\n  'fill-available',\n  'stretch'\n]\n\nmodule.exports = Intrinsic\n","let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass JustifyContent extends Declaration {\n  /**\n   * Change property name for 2009 and 2012 specs\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2009) {\n      return prefix + 'box-pack'\n    }\n    if (spec === 2012) {\n      return prefix + 'flex-pack'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'justify-content'\n  }\n\n  /**\n   * Change value for 2009 and 2012 specs\n   */\n  set(decl, prefix) {\n    let spec = flexSpec(prefix)[0]\n    if (spec === 2009 || spec === 2012) {\n      let value = JustifyContent.oldValues[decl.value] || decl.value\n      decl.value = value\n      if (spec !== 2009 || value !== 'distribute') {\n        return super.set(decl, prefix)\n      }\n    } else if (spec === 'final') {\n      return super.set(decl, prefix)\n    }\n    return undefined\n  }\n}\n\nJustifyContent.names = ['justify-content', 'flex-pack', 'box-pack']\n\nJustifyContent.oldValues = {\n  'flex-end': 'end',\n  'flex-start': 'start',\n  'space-between': 'justify',\n  'space-around': 'distribute'\n}\n\nmodule.exports = JustifyContent\n","let Declaration = require('../declaration')\n\nclass MaskBorder extends Declaration {\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return this.name.replace('box-image', 'border')\n  }\n\n  /**\n   * Return flex property for 2012 spec\n   */\n  prefixed(prop, prefix) {\n    let result = super.prefixed(prop, prefix)\n    if (prefix === '-webkit-') {\n      result = result.replace('border', 'box-image')\n    }\n    return result\n  }\n}\n\nMaskBorder.names = [\n  'mask-border',\n  'mask-border-source',\n  'mask-border-slice',\n  'mask-border-width',\n  'mask-border-outset',\n  'mask-border-repeat',\n  'mask-box-image',\n  'mask-box-image-source',\n  'mask-box-image-slice',\n  'mask-box-image-width',\n  'mask-box-image-outset',\n  'mask-box-image-repeat'\n]\n\nmodule.exports = MaskBorder\n","let Declaration = require('../declaration')\n\nclass MaskComposite extends Declaration {\n  /**\n   * Prefix mask-composite for webkit\n   */\n  insert(decl, prefix, prefixes) {\n    let isCompositeProp = decl.prop === 'mask-composite'\n\n    let compositeValues\n\n    if (isCompositeProp) {\n      compositeValues = decl.value.split(',')\n    } else {\n      compositeValues = decl.value.match(MaskComposite.regexp) || []\n    }\n\n    compositeValues = compositeValues.map(el => el.trim()).filter(el => el)\n    let hasCompositeValues = compositeValues.length\n\n    let compositeDecl\n\n    if (hasCompositeValues) {\n      compositeDecl = this.clone(decl)\n      compositeDecl.value = compositeValues\n        .map(value => MaskComposite.oldValues[value] || value)\n        .join(', ')\n\n      if (compositeValues.includes('intersect')) {\n        compositeDecl.value += ', xor'\n      }\n\n      compositeDecl.prop = prefix + 'mask-composite'\n    }\n\n    if (isCompositeProp) {\n      if (!hasCompositeValues) {\n        return undefined\n      }\n\n      if (this.needCascade(decl)) {\n        compositeDecl.raws.before = this.calcBefore(prefixes, decl, prefix)\n      }\n\n      return decl.parent.insertBefore(decl, compositeDecl)\n    }\n\n    let cloned = this.clone(decl)\n    cloned.prop = prefix + cloned.prop\n\n    if (hasCompositeValues) {\n      cloned.value = cloned.value.replace(MaskComposite.regexp, '')\n    }\n\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix)\n    }\n\n    decl.parent.insertBefore(decl, cloned)\n\n    if (!hasCompositeValues) {\n      return decl\n    }\n\n    if (this.needCascade(decl)) {\n      compositeDecl.raws.before = this.calcBefore(prefixes, decl, prefix)\n    }\n    return decl.parent.insertBefore(decl, compositeDecl)\n  }\n}\n\nMaskComposite.names = ['mask', 'mask-composite']\n\nMaskComposite.oldValues = {\n  add: 'source-over',\n  subtract: 'source-out',\n  intersect: 'source-in',\n  exclude: 'xor'\n}\n\nMaskComposite.regexp = new RegExp(\n  `\\\\s+(${Object.keys(MaskComposite.oldValues).join(\n    '|'\n  )})\\\\b(?!\\\\))\\\\s*(?=[,])`,\n  'ig'\n)\n\nmodule.exports = MaskComposite\n","let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass Order extends Declaration {\n  /**\n   * Change property name for 2009 and 2012 specs\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2009) {\n      return prefix + 'box-ordinal-group'\n    }\n    if (spec === 2012) {\n      return prefix + 'flex-order'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'order'\n  }\n\n  /**\n   * Fix value for 2009 spec\n   */\n  set(decl, prefix) {\n    let spec = flexSpec(prefix)[0]\n    if (spec === 2009 && /\\d/.test(decl.value)) {\n      decl.value = (parseInt(decl.value) + 1).toString()\n      return super.set(decl, prefix)\n    }\n    return super.set(decl, prefix)\n  }\n}\n\nOrder.names = ['order', 'flex-order', 'box-ordinal-group']\n\nmodule.exports = Order\n","let Declaration = require('../declaration')\n\nclass OverscrollBehavior extends Declaration {\n  /**\n   * Change property name for IE\n   */\n  prefixed(prop, prefix) {\n    return prefix + 'scroll-chaining'\n  }\n\n  /**\n   * Return property name by spec\n   */\n  normalize() {\n    return 'overscroll-behavior'\n  }\n\n  /**\n   * Change value for IE\n   */\n  set(decl, prefix) {\n    if (decl.value === 'auto') {\n      decl.value = 'chained'\n    } else if (decl.value === 'none' || decl.value === 'contain') {\n      decl.value = 'none'\n    }\n    return super.set(decl, prefix)\n  }\n}\n\nOverscrollBehavior.names = ['overscroll-behavior', 'scroll-chaining']\n\nmodule.exports = OverscrollBehavior\n","let OldValue = require('../old-value')\nlet Value = require('../value')\n\nclass Pixelated extends Value {\n  /**\n   * Use non-standard name for WebKit and Firefox\n   */\n  replace(string, prefix) {\n    if (prefix === '-webkit-') {\n      return string.replace(this.regexp(), '$1-webkit-optimize-contrast')\n    }\n    if (prefix === '-moz-') {\n      return string.replace(this.regexp(), '$1-moz-crisp-edges')\n    }\n    return super.replace(string, prefix)\n  }\n\n  /**\n   * Different name for WebKit and Firefox\n   */\n  old(prefix) {\n    if (prefix === '-webkit-') {\n      return new OldValue(this.name, '-webkit-optimize-contrast')\n    }\n    if (prefix === '-moz-') {\n      return new OldValue(this.name, '-moz-crisp-edges')\n    }\n    return super.old(prefix)\n  }\n}\n\nPixelated.names = ['pixelated']\n\nmodule.exports = Pixelated\n","let Declaration = require('../declaration')\nlet utils = require('./grid-utils')\n\nclass PlaceSelf extends Declaration {\n  /**\n   * Translate place-self to separate -ms- prefixed properties\n   */\n  insert(decl, prefix, prefixes) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)\n\n    // prevent doubling of prefixes\n    if (decl.parent.some(i => i.prop === '-ms-grid-row-align')) {\n      return undefined\n    }\n\n    let [[first, second]] = utils.parse(decl)\n\n    if (second) {\n      utils.insertDecl(decl, 'grid-row-align', first)\n      utils.insertDecl(decl, 'grid-column-align', second)\n    } else {\n      utils.insertDecl(decl, 'grid-row-align', first)\n      utils.insertDecl(decl, 'grid-column-align', first)\n    }\n\n    return undefined\n  }\n}\n\nPlaceSelf.names = ['place-self']\n\nmodule.exports = PlaceSelf\n","let Selector = require('../selector')\n\nclass PlaceholderShown extends Selector {\n  /**\n   * Return different selectors depend on prefix\n   */\n  prefixed(prefix) {\n    if (prefix === '-ms-') {\n      return ':-ms-input-placeholder'\n    }\n    return `:${prefix}placeholder-shown`\n  }\n}\n\nPlaceholderShown.names = [':placeholder-shown']\n\nmodule.exports = PlaceholderShown\n","let Selector = require('../selector')\n\nclass Placeholder extends Selector {\n  /**\n   * Add old mozilla to possible prefixes\n   */\n  possible() {\n    return super.possible().concat(['-moz- old', '-ms- old'])\n  }\n\n  /**\n   * Return different selectors depend on prefix\n   */\n  prefixed(prefix) {\n    if (prefix === '-webkit-') {\n      return '::-webkit-input-placeholder'\n    }\n    if (prefix === '-ms-') {\n      return '::-ms-input-placeholder'\n    }\n    if (prefix === '-ms- old') {\n      return ':-ms-input-placeholder'\n    }\n    if (prefix === '-moz- old') {\n      return ':-moz-placeholder'\n    }\n    return `::${prefix}placeholder`\n  }\n}\n\nPlaceholder.names = ['::placeholder']\n\nmodule.exports = Placeholder\n","let Declaration = require('../declaration')\n\nclass PrintColorAdjust extends Declaration {\n  /**\n   * Change property name for WebKit-based browsers\n   */\n  prefixed(prop, prefix) {\n    if (prefix === '-moz-') {\n      return 'color-adjust'\n    } else {\n      return prefix + 'print-color-adjust'\n    }\n  }\n\n  /**\n   * Return property name by spec\n   */\n  normalize() {\n    return 'print-color-adjust'\n  }\n}\n\nPrintColorAdjust.names = ['print-color-adjust', 'color-adjust']\n\nmodule.exports = PrintColorAdjust\n","let Declaration = require('../declaration')\n\nclass TextDecorationSkipInk extends Declaration {\n  /**\n   * Change prefix for ink value\n   */\n  set(decl, prefix) {\n    if (decl.prop === 'text-decoration-skip-ink' && decl.value === 'auto') {\n      decl.prop = prefix + 'text-decoration-skip'\n      decl.value = 'ink'\n      return decl\n    } else {\n      return super.set(decl, prefix)\n    }\n  }\n}\n\nTextDecorationSkipInk.names = [\n  'text-decoration-skip-ink',\n  'text-decoration-skip'\n]\n\nmodule.exports = TextDecorationSkipInk\n","let Declaration = require('../declaration')\n\nconst BASIC = [\n  'none',\n  'underline',\n  'overline',\n  'line-through',\n  'blink',\n  'inherit',\n  'initial',\n  'unset'\n]\n\nclass TextDecoration extends Declaration {\n  /**\n   * Do not add prefixes for basic values.\n   */\n  check(decl) {\n    return decl.value.split(/\\s+/).some(i => !BASIC.includes(i))\n  }\n}\n\nTextDecoration.names = ['text-decoration']\n\nmodule.exports = TextDecoration\n","let Declaration = require('../declaration')\n\nclass TextEmphasisPosition extends Declaration {\n  set(decl, prefix) {\n    if (prefix === '-webkit-') {\n      decl.value = decl.value.replace(/\\s*(right|left)\\s*/i, '')\n    }\n    return super.set(decl, prefix)\n  }\n}\n\nTextEmphasisPosition.names = ['text-emphasis-position']\n\nmodule.exports = TextEmphasisPosition\n","let Declaration = require('../declaration')\n\nclass TransformDecl extends Declaration {\n  /**\n   * Recursively check all parents for @keyframes\n   */\n  keyframeParents(decl) {\n    let { parent } = decl\n    while (parent) {\n      if (parent.type === 'atrule' && parent.name === 'keyframes') {\n        return true\n      }\n      ;({ parent } = parent)\n    }\n    return false\n  }\n\n  /**\n   * Is transform contain 3D commands\n   */\n  contain3d(decl) {\n    if (decl.prop === 'transform-origin') {\n      return false\n    }\n\n    for (let func of TransformDecl.functions3d) {\n      if (decl.value.includes(`${func}(`)) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n  /**\n   * Replace rotateZ to rotate for IE 9\n   */\n  set(decl, prefix) {\n    decl = super.set(decl, prefix)\n    if (prefix === '-ms-') {\n      decl.value = decl.value.replace(/rotatez/gi, 'rotate')\n    }\n    return decl\n  }\n\n  /**\n   * Don't add prefix for IE in keyframes\n   */\n  insert(decl, prefix, prefixes) {\n    if (prefix === '-ms-') {\n      if (!this.contain3d(decl) && !this.keyframeParents(decl)) {\n        return super.insert(decl, prefix, prefixes)\n      }\n    } else if (prefix === '-o-') {\n      if (!this.contain3d(decl)) {\n        return super.insert(decl, prefix, prefixes)\n      }\n    } else {\n      return super.insert(decl, prefix, prefixes)\n    }\n    return undefined\n  }\n}\n\nTransformDecl.names = ['transform', 'transform-origin']\n\nTransformDecl.functions3d = [\n  'matrix3d',\n  'translate3d',\n  'translateZ',\n  'scale3d',\n  'scaleZ',\n  'rotate3d',\n  'rotateX',\n  'rotateY',\n  'perspective'\n]\n\nmodule.exports = TransformDecl\n","let Declaration = require('../declaration')\n\nclass UserSelect extends Declaration {\n  /**\n   * Change prefixed value for IE\n   */\n  set(decl, prefix) {\n    if (prefix === '-ms-' && decl.value === 'contain') {\n      decl.value = 'element'\n    }\n    return super.set(decl, prefix)\n  }\n\n  /**\n   * Avoid prefixing all in IE\n   */\n  insert(decl, prefix, prefixes) {\n    if (decl.value === 'all' && prefix === '-ms-') {\n      return undefined\n    } else {\n      return super.insert(decl, prefix, prefixes)\n    }\n  }\n}\n\nUserSelect.names = ['user-select']\n\nmodule.exports = UserSelect\n","let Declaration = require('../declaration')\n\nclass WritingMode extends Declaration {\n  insert(decl, prefix, prefixes) {\n    if (prefix === '-ms-') {\n      let cloned = this.set(this.clone(decl), prefix)\n\n      if (this.needCascade(decl)) {\n        cloned.raws.before = this.calcBefore(prefixes, decl, prefix)\n      }\n      let direction = 'ltr'\n\n      decl.parent.nodes.forEach(i => {\n        if (i.prop === 'direction') {\n          if (i.value === 'rtl' || i.value === 'ltr') direction = i.value\n        }\n      })\n\n      cloned.value = WritingMode.msValues[direction][decl.value] || decl.value\n      return decl.parent.insertBefore(decl, cloned)\n    }\n\n    return super.insert(decl, prefix, prefixes)\n  }\n}\n\nWritingMode.names = ['writing-mode']\n\nWritingMode.msValues = {\n  ltr: {\n    'horizontal-tb': 'lr-tb',\n    'vertical-rl': 'tb-rl',\n    'vertical-lr': 'tb-lr'\n  },\n  rtl: {\n    'horizontal-tb': 'rl-tb',\n    'vertical-rl': 'bt-rl',\n    'vertical-lr': 'bt-lr'\n  }\n}\n\nmodule.exports = WritingMode\n"],"names":["Selector","utils","FileSelectorButton","constructor","name","prefixes","all","super","this","uniq","map","prefixed","prefix","names","module","exports","Value","FilterValue","Declaration","Filter","check","decl","v","value","toLowerCase","includes","flexSpec","FlexBasis","normalize","prop","spec","set","FlexDirection","insert","parent","some","i","orient","dir","cloned","clone","needCascade","raws","before","calcBefore","insertBefore","old","FlexFlow","values","split","filter","length","Flex","FlexShrink","FlexWrap","list","space","oldValues","components","slice","concat","join","auto","none","Fullscreen","parser","range","OldValue","IS_DIRECTION","Gradient","replace","string","ast","node","nodes","gradientName","type","newDirection","oldWebkit","convertDirection","toString","replaceFirst","params","words","normalizeUnit","str","full","parseFloat","test","Math","PI","num","wrap","direction","lastIndex","unshift","revertDirection","isRadial","state","param","fixDirection","fixAngle","fixRadial","splice","first","abs","roundFloat","a","b","c","next","div","second","push","word","directions","float","digits","toFixed","stringify","oldDirection","colorStops","cloneDiv","oldDirections","bottom","after","result","pos","item","stop","color","regexp","add","p","top","left","right","GridArea","parse","rowStart","rowSpan","translate","columnStart","columnSpan","forEach","insertDecl","warnTemplateSelectorNotFound","warnIfGridRowColumnExists","GridColumnAlign","isPureNumber","GridEnd","clonedDecl","startProp","spanProp","startDecl","walkDecls","d","Number","warn","cloneBefore","GridRowAlign","GridRowColumn","start","span","prefixTrackProp","prefixTrackValue","autoplaceGridItems","getGridGap","inheritGridGap","Processor","GridRowsColumns","isRowProp","isColumnProp","hasGridTemplate","processor","options","status","gridStatus","gap","gapValue","row","column","prefixValue","autoflow","find","autoflowValue","disabled","trim","rowDecl","GridStart","parseGridAreas","warnMissedAreas","warnGridGap","GridTemplateAreas","hasColumns","hasRows","remove","trackDecl","gridRows","areas","rows","parseTemplate","GridTemplate","inheritedGap","columns","hasAreas","Object","keys","Boolean","escapeRegexp","splitSelector","convert","parseInt","transformRepeat","count","size","reduce","key","val","index","startIndex","endIndex","startValue","endValue","spanStart","end","spanEnd","current","DOTS","track","line","rowIndex","getColumns","area","columnIndex","min","max","verifyRowSize","gridTemplate","testTrack","getMSDecls","addRowSpan","addColumnSpan","String","getParentMedia","changeDuplicateAreaSelectors","ruleSelectors","templateSelectors","selector","selectorBySpace","selectorByComma","comma","ruleSelector","tplSelector","selectorsEqual","ruleA","ruleB","selectors","sel","parseMediaParams","walk","rule","mediaRule","root","splitSelectorArr","closestRuleGap","lastBySpace","escaped","RegExp","walkRules","r","gridGap","selA","selB","splitSelectorArrA","splitSelectorArrB","idx","res","every","arr","part","innerIndex","byCommaArr","bySpaceArr","shouldInheritGap","media","undefined","normalizeRowColumn","acc","n","insertAreas","css","isDisabled","gridTemplatesData","parsed","areaNames","allAreas","rules","hasNoDuplicates","hasDuplicates","duplicatesFound","duplicateAreaNames","updateSpan","areasCount","duplicateRules","parseGridTemplatesData","rulesToInsert","gridArea","gridAreaRule","hasPrefixedRow","gridAreaMedia","gridAreaRuleIndex","data","lastArea","selectorIsComplex","lastRuleIsSet","hasDuplicateName","reverse","prepend","assign","between","removeAll","append","lastRule","lastRuleIndex","missed","e","slicedSelectorArr","gridTemplateFound","foundAreaSelector","hasArea","tplSelectorArr","decls","endsWith","startsWith","hasBothGaps","_","Array","from","k","items","sort","nodeSelector","ImageRendering","process","ImageSet","fixed","InlineLogical","Intrinsic","regexpCache","isStretch","JustifyContent","MaskBorder","MaskComposite","compositeValues","isCompositeProp","match","el","compositeDecl","hasCompositeValues","subtract","intersect","exclude","Order","OverscrollBehavior","Pixelated","PlaceSelf","PlaceholderShown","Placeholder","possible","PrintColorAdjust","TextDecorationSkipInk","BASIC","TextDecoration","TextEmphasisPosition","TransformDecl","keyframeParents","contain3d","func","functions3d","UserSelect","WritingMode","msValues","ltr","rtl"],"sourceRoot":""}