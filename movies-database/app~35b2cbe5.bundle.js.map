{"version":3,"file":"app~35b2cbe5.bundle.js","mappings":"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","sources":["webpack://movies-detail-app/./src/script/pages/Trending.js","webpack://movies-detail-app/./src/script/pages/Upcomming.js","webpack://movies-detail-app/./src/script/pages/Tv.js","webpack://movies-detail-app/./src/script/routes/indexUrl.js","webpack://movies-detail-app/./src/script/routes/urlParse.js"],"sourcesContent":["import MoviesDB from '../data/MoviesDB';\nimport getData from '../utility/dataGetter';\nimport pagination from '../utility/pagination';\n\nconst Trending = {\n  render() {\n    return `\n      <div class=\"container-content\">\n        <slider-tag id=\"slider\" class=\"upcomming\"></slider-tag>\n        <list-tag id=\"all-trending-movies\" class=\"trending\"></list-tag>\n      </div>\n      <aside>\n        <suggestion-tag id=\"trending-tv-show\" class=\"trending-tv\"></suggestion-tag>\n      </aside>\n    `;\n  },\n\n  async afterRender() {\n    const upcommingContainer = document.querySelector('.upcomming');\n    const trendingContainer = document.querySelector('.trending');\n    const trendingTvContainer = document.querySelector('.trending-tv');\n\n    await getData(upcommingContainer, MoviesDB.Upcomming());\n    await getData(trendingContainer, MoviesDB.Trending());\n    await getData(trendingTvContainer, MoviesDB.Trending('1', 'tv'));\n\n    pagination(trendingContainer);\n  },\n};\n\nexport default Trending;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-undef */\nimport MoviesDB from '../data/MoviesDB';\nimport getData from '../utility/dataGetter';\nimport '../../components/List';\nimport pagination from '../utility/pagination';\n\nconst Upcomming = {\n  render() {\n    return `\n            <div class=\"container-content\">\n              <slider-tag id=\"slider\"></slider-tag>\n              <list-tag id=\"all-upcomming-movies\" class=\"all-upcomming\"></list-tag>\n            </div>\n            <aside class=\"\">\n              <suggestion-tag id=\"trending-tv-show\"></suggestion-tag>\n            </aside>\n        `;\n  },\n\n  async afterRender() {\n    const slider = document.querySelector('#slider');\n    const allUpcomming = document.querySelector('.all-upcomming');\n    const trendingTv = document.querySelector('#trending-tv-show');\n\n    await getData(slider, MoviesDB.Trending());\n    await getData(allUpcomming, MoviesDB.Upcomming());\n    await getData(trendingTv, MoviesDB.Trending('1', 'tv'));\n\n    pagination(allUpcomming);\n  },\n};\n\nexport default Upcomming;\n","import { detailMovieOrTvTemplate } from '../../templates/templateCreator';\nimport MoviesDB from '../data/MoviesDB';\nimport getData from '../utility/dataGetter';\n\nconst Tv = {\n  render() {\n    return `\n        <div class=\"container-content\">\n            <slider-tag id=\"slider\" class=\"tv-slider\"></slider-tag>\n            <list-tag id=\"on-air\" class=\"upcomming\"></list-tag>\n            <div class=\"latest mt-5 bg-slate-800\">\n              <div class=\"text-slate-50 py-2 px-4\">\n                <h2 class=\"font-bold text-lg\">Latest Tv Show</h2>\n              </div>\n            </div>\n            <list-tag id=\"top-rated-tv-show\" class=\"top-rated\"></list-tag>\n            <list-tag id=\"popular-tv-show\" class=\"popular-tv\"></list-tag>\n        </div>\n        <aside>\n          <suggestion-tag id=\"trending-movies\" class=\"trending-movies\"></suggestion-tag>\n        </aside>\n    `;\n  },\n\n  async afterRender() {\n    const tvSlider = document.querySelector('.tv-slider');\n    const tvUpcomming = document.querySelector('.upcomming');\n    const tvLatest = document.querySelector('.latest');\n    const topRatedContainer = document.querySelector('.top-rated');\n    const popularTvContainer = document.querySelector('.popular-tv');\n    const trendingContainer = document.querySelector('.trending-movies');\n\n    const data = await MoviesDB.Latest('tv');\n    const cast = await MoviesDB.CreditMovieOrTv(data.id, 'tv');\n\n    await getData(tvSlider, MoviesDB.Trending(1, 'tv'));\n    await getData(tvUpcomming, MoviesDB.TvOnAir());\n    await getData(topRatedContainer, MoviesDB.TopRated('1', 'tv'));\n    await getData(popularTvContainer, MoviesDB.PopularMovieOrTv('1', 'tv'));\n    await getData(trendingContainer, MoviesDB.Trending());\n    // console.log(await MoviesDB.TopRated());\n    tvLatest.innerHTML += detailMovieOrTvTemplate(data, cast, '');\n  },\n};\n\nexport default Tv;\n","/* eslint-disable import/no-named-as-default */\n/* eslint-disable import/no-named-as-default-member */\nimport Home from '../pages/Home';\nimport Trending from '../pages/Trending';\nimport Upcomming from '../pages/Upcomming';\nimport Latest from '../pages/Latest';\nimport Detail from '../pages/Detail';\nimport Expand from '../pages/Expand';\nimport Tv from '../pages/Tv';\n// import OnAir from '../pages/OnAir';\n\nconst indexUrl = {\n  '/': Home,\n  '/trending': Trending,\n  '/upcomming': Upcomming,\n  '/latest': Latest,\n  '/movie/:id': Detail,\n  '/tv/:id': Detail,\n  '/person/:id': Detail,\n  '/genre/:id': Expand,\n  '/tvshow': Tv,\n  '/on-air': Expand,\n  '/top-rated-tv': Expand,\n  '/popular-tv-show': Expand,\n  '/tv/:id/season/:idSeason': Detail,\n};\n\nexport default indexUrl;\n","const urlParse = {\n  parseUrl() {\n    const url = window.location.hash.slice(1);\n    const splitedUrl = this.splitUrl(url);\n    return this.urlCombiner(splitedUrl);\n  },\n\n  parseUrlWithoutCombiner() {\n    const url = window.location.hash.slice(1).toLowerCase();\n    return this.splitUrl(url);\n  },\n\n  splitUrl(url) {\n    const split = url.split('/');\n    return {\n      pages: split[1] || null,\n      id: split[2] || null,\n      season: split[3] || null,\n      idSeason: split[4] || null,\n    };\n  },\n\n  urlCombiner(splitedUrl) {\n    return (splitedUrl.pages ? `/${splitedUrl.pages}` : '/')\n      + (splitedUrl.id ? '/:id' : '')\n      + (splitedUrl.season ? `/${splitedUrl.season}` : '')\n      + (splitedUrl.idSeason ? '/:idSeason' : '');\n  },\n};\n\nexport default urlParse;\n"],"names":["i","render","afterRender","upcommingContainer","document","querySelector","trendingContainer","trendingTvContainer","getData","MoviesDB","pagination","slider","allUpcomming","trendingTv","tvSlider","tvUpcomming","tvLatest","topRatedContainer","popularTvContainer","data","id","cast","innerHTML","detailMovieOrTvTemplate","Home","Trending","Upcomming","Latest","Detail","Expand","Tv","parseUrl","url","window","location","hash","slice","splitedUrl","this","splitUrl","urlCombiner","parseUrlWithoutCombiner","toLowerCase","split","pages","season","idSeason"],"sourceRoot":""}