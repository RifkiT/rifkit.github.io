{"version":3,"file":"app~35b2cbe5.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;+CACA;AAAA;AAAA;AADwC;AACI;AACG;AAE/C,IAAMG,QAAQ,GAAG;EACfC,MAAM,oBAAG;IACP;EASF,CAAC;EAEKC,WAAW,yBAAG;IAAA;MAAA;MAAA;QAAA;UAAA;YACZC,kBAAkB,GAAGC,QAAQ,CAACC,aAAa,CAAC,YAAY,CAAC;YACzDC,iBAAiB,GAAGF,QAAQ,CAACC,aAAa,CAAC,WAAW,CAAC;YACvDE,mBAAmB,GAAGH,QAAQ,CAACC,aAAa,CAAC,cAAc,CAAC;YAAA;YAAA,OAE5DP,6BAAO,CAACK,kBAAkB,EAAEN,2CAAkB,EAAE,CAAC;UAAA;YAAA;YAAA,OACjDC,6BAAO,CAACQ,iBAAiB,EAAET,yCAAiB,EAAE,CAAC;UAAA;YAAA;YAAA,OAC/CC,6BAAO,CAACS,mBAAmB,EAAEV,yCAAiB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;UAAA;YAEhEE,6BAAU,CAACO,iBAAiB,CAAC;UAAC;UAAA;YAAA;QAAA;MAAA;IAAA;EAChC;AACF,CAAC;AAED,qDAAeN,QAAQ;;;;;wDC7BvB;AAAA;AAAA;AADA;AACA;AACwC;AACI;AACb;AACgB;AAE/C,IAAMQ,SAAS,GAAG;EAChBP,MAAM,oBAAG;IACP;EASF,CAAC;EAEKC,WAAW,yBAAG;IAAA;MAAA;MAAA;QAAA;UAAA;YACZO,MAAM,GAAGL,QAAQ,CAACC,aAAa,CAAC,SAAS,CAAC;YAC1CK,YAAY,GAAGN,QAAQ,CAACC,aAAa,CAAC,gBAAgB,CAAC;YACvDM,UAAU,GAAGP,QAAQ,CAACC,aAAa,CAAC,mBAAmB,CAAC;YAAA;YAAA,OAExDP,6BAAO,CAACW,MAAM,EAAEZ,yCAAiB,EAAE,CAAC;UAAA;YAAA;YAAA,OACpCC,6BAAO,CAACY,YAAY,EAAEb,2CAAkB,EAAE,CAAC;UAAA;YAAA;YAAA,OAC3CC,6BAAO,CAACa,UAAU,EAAEd,yCAAiB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;UAAA;YAEvDE,6BAAU,CAACW,YAAY,CAAC;UAAC;UAAA;YAAA;QAAA;MAAA;IAAA;EAC3B;AACF,CAAC;AAED,sDAAeF,SAAS;;;;;;;;;;;iDChCxB;AAAA;AAAA;AAD0E;AAClC;AACI;AAE5C,IAAMK,EAAE,GAAG;EACTZ,MAAM,oBAAG;IACP;EAgBF,CAAC;EAEKC,WAAW,yBAAG;IAAA;MAAA;MAAA;QAAA;UAAA;YACZY,QAAQ,GAAGV,QAAQ,CAACC,aAAa,CAAC,YAAY,CAAC;YAC/CU,WAAW,GAAGX,QAAQ,CAACC,aAAa,CAAC,YAAY,CAAC;YAClDW,QAAQ,GAAGZ,QAAQ,CAACC,aAAa,CAAC,SAAS,CAAC;YAC5CY,iBAAiB,GAAGb,QAAQ,CAACC,aAAa,CAAC,YAAY,CAAC;YACxDa,kBAAkB,GAAGd,QAAQ,CAACC,aAAa,CAAC,aAAa,CAAC;YAC1DC,iBAAiB,GAAGF,QAAQ,CAACC,aAAa,CAAC,kBAAkB,CAAC;YAAA;YAAA,OAEjDR,qCAAe,CAAC,IAAI,CAAC;UAAA;YAAlCuB,IAAI;YAAA;YAAA,OACSvB,uDAAwB,CAACuB,IAAI,CAACE,EAAE,EAAE,IAAI,CAAC;UAAA;YAApDC,IAAI;YAAA;YAAA,OAEJzB,6BAAO,CAACgB,QAAQ,EAAEjB,yCAAiB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;UAAA;YAAA;YAAA,OAC7CC,6BAAO,CAACiB,WAAW,EAAElB,uCAAgB,EAAE,CAAC;UAAA;YAAA;YAAA,OACxCC,6BAAO,CAACmB,iBAAiB,EAAEpB,yCAAiB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;UAAA;YAAA;YAAA,OACxDC,6BAAO,CAACoB,kBAAkB,EAAErB,yDAAyB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;UAAA;YAAA;YAAA,OACjEC,6BAAO,CAACQ,iBAAiB,EAAET,yCAAiB,EAAE,CAAC;UAAA;YACrD;YACAmB,QAAQ,CAACW,SAAS,IAAIf,mDAAuB,CAACQ,IAAI,EAAEG,IAAI,EAAE,EAAE,CAAC;UAAC;UAAA;YAAA;QAAA;MAAA;IAAA;EAChE;AACF,CAAC;AAED,+CAAeV,EAAE;;AC7CjB;AACA;AACiC;AACQ;AACE;AACN;AACA;AACA;AACR;AAC7B;;AAEA,IAAMkB,QAAQ,GAAG;EACf,GAAG,EAAEH,mBAAI;EACT,WAAW,EAAE5B,cAAQ;EACrB,YAAY,EAAEQ,eAAS;EACvB,SAAS,EAAEW,qBAAM;EACjB,YAAY,EAAEU,qBAAM;EACpB,SAAS,EAAEA,qBAAM;EACjB,aAAa,EAAEA,qBAAM;EACrB,YAAY,EAAEC,qBAAM;EACpB,SAAS,EAAEjB,QAAE;EACb,SAAS,EAAEiB,qBAAM;EACjB,eAAe,EAAEA,qBAAM;EACvB,kBAAkB,EAAEA,qBAAM;EAC1B,0BAA0B,EAAED,qBAAMA;AACpC,CAAC;AAED,sDAAeE,QAAQ;;;;;;;;;;AC3BvB,IAAMC,QAAQ,GAAG;EACfC,QAAQ,sBAAG;IACT,IAAMC,GAAG,GAAGC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC;IACzC,IAAMC,UAAU,GAAG,IAAI,CAACC,QAAQ,CAACN,GAAG,CAAC;IACrC,OAAO,IAAI,CAACO,WAAW,CAACF,UAAU,CAAC;EACrC,CAAC;EAEDG,uBAAuB,qCAAG;IACxB,IAAMR,GAAG,GAAGC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAACK,WAAW,EAAE;IACvD,OAAO,IAAI,CAACH,QAAQ,CAACN,GAAG,CAAC;EAC3B,CAAC;EAEDM,QAAQ,oBAACN,GAAG,EAAE;IACZ,IAAMU,KAAK,GAAGV,GAAG,CAACU,KAAK,CAAC,GAAG,CAAC;IAC5B,OAAO;MACLC,KAAK,EAAED,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI;MACvBtB,EAAE,EAAEsB,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI;MACpBE,MAAM,EAAEF,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI;MACxBG,QAAQ,EAAEH,KAAK,CAAC,CAAC,CAAC,IAAI;IACxB,CAAC;EACH,CAAC;EAEDH,WAAW,uBAACF,UAAU,EAAE;IACtB,OAAO,CAACA,UAAU,CAACM,KAAK,cAAON,UAAU,CAACM,KAAK,IAAK,GAAG,KAClDN,UAAU,CAACjB,EAAE,GAAG,MAAM,GAAG,EAAE,CAAC,IAC5BiB,UAAU,CAACO,MAAM,cAAOP,UAAU,CAACO,MAAM,IAAK,EAAE,CAAC,IACjDP,UAAU,CAACQ,QAAQ,GAAG,YAAY,GAAG,EAAE,CAAC;EAC/C;AACF,CAAC;AAED,iEAAef,QAAQ","sources":["webpack://movies-detail-app/./src/script/pages/Trending.js","webpack://movies-detail-app/./src/script/pages/Upcomming.js","webpack://movies-detail-app/./src/script/pages/Tv.js","webpack://movies-detail-app/./src/script/routes/indexUrl.js","webpack://movies-detail-app/./src/script/routes/urlParse.js"],"sourcesContent":["import MoviesDB from '../data/MoviesDB';\nimport getData from '../utility/dataGetter';\nimport pagination from '../utility/pagination';\n\nconst Trending = {\n  render() {\n    return `\n      <div class=\"container-content\">\n        <slider-tag id=\"slider\" class=\"upcomming\"></slider-tag>\n        <list-tag id=\"all-trending-movies\" class=\"trending\"></list-tag>\n      </div>\n      <aside>\n        <suggestion-tag id=\"trending-tv-show\" class=\"trending-tv\"></suggestion-tag>\n      </aside>\n    `;\n  },\n\n  async afterRender() {\n    const upcommingContainer = document.querySelector('.upcomming');\n    const trendingContainer = document.querySelector('.trending');\n    const trendingTvContainer = document.querySelector('.trending-tv');\n\n    await getData(upcommingContainer, MoviesDB.Upcomming());\n    await getData(trendingContainer, MoviesDB.Trending());\n    await getData(trendingTvContainer, MoviesDB.Trending('1', 'tv'));\n\n    pagination(trendingContainer);\n  },\n};\n\nexport default Trending;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-undef */\nimport MoviesDB from '../data/MoviesDB';\nimport getData from '../utility/dataGetter';\nimport '../../components/List';\nimport pagination from '../utility/pagination';\n\nconst Upcomming = {\n  render() {\n    return `\n            <div class=\"container-content\">\n              <slider-tag id=\"slider\"></slider-tag>\n              <list-tag id=\"all-upcomming-movies\" class=\"all-upcomming\"></list-tag>\n            </div>\n            <aside class=\"\">\n              <suggestion-tag id=\"trending-tv-show\"></suggestion-tag>\n            </aside>\n        `;\n  },\n\n  async afterRender() {\n    const slider = document.querySelector('#slider');\n    const allUpcomming = document.querySelector('.all-upcomming');\n    const trendingTv = document.querySelector('#trending-tv-show');\n\n    await getData(slider, MoviesDB.Trending());\n    await getData(allUpcomming, MoviesDB.Upcomming());\n    await getData(trendingTv, MoviesDB.Trending('1', 'tv'));\n\n    pagination(allUpcomming);\n  },\n};\n\nexport default Upcomming;\n","import { detailMovieOrTvTemplate } from '../../templates/templateCreator';\nimport MoviesDB from '../data/MoviesDB';\nimport getData from '../utility/dataGetter';\n\nconst Tv = {\n  render() {\n    return `\n        <div class=\"container-content\">\n            <slider-tag id=\"slider\" class=\"tv-slider\"></slider-tag>\n            <list-tag id=\"on-air\" class=\"upcomming\"></list-tag>\n            <div class=\"latest mt-5 bg-slate-800\">\n              <div class=\"text-slate-50 py-2 px-4\">\n                <h2 class=\"font-bold text-lg\">Latest Tv Show</h2>\n              </div>\n            </div>\n            <list-tag id=\"top-rated-tv-show\" class=\"top-rated\"></list-tag>\n            <list-tag id=\"popular-tv-show\" class=\"popular-tv\"></list-tag>\n        </div>\n        <aside>\n          <suggestion-tag id=\"trending-movies\" class=\"trending-movies\"></suggestion-tag>\n        </aside>\n    `;\n  },\n\n  async afterRender() {\n    const tvSlider = document.querySelector('.tv-slider');\n    const tvUpcomming = document.querySelector('.upcomming');\n    const tvLatest = document.querySelector('.latest');\n    const topRatedContainer = document.querySelector('.top-rated');\n    const popularTvContainer = document.querySelector('.popular-tv');\n    const trendingContainer = document.querySelector('.trending-movies');\n\n    const data = await MoviesDB.Latest('tv');\n    const cast = await MoviesDB.CreditMovieOrTv(data.id, 'tv');\n\n    await getData(tvSlider, MoviesDB.Trending(1, 'tv'));\n    await getData(tvUpcomming, MoviesDB.TvOnAir());\n    await getData(topRatedContainer, MoviesDB.TopRated('1', 'tv'));\n    await getData(popularTvContainer, MoviesDB.PopularMovieOrTv('1', 'tv'));\n    await getData(trendingContainer, MoviesDB.Trending());\n    // console.log(await MoviesDB.TopRated());\n    tvLatest.innerHTML += detailMovieOrTvTemplate(data, cast, '');\n  },\n};\n\nexport default Tv;\n","/* eslint-disable import/no-named-as-default */\n/* eslint-disable import/no-named-as-default-member */\nimport Home from '../pages/Home';\nimport Trending from '../pages/Trending';\nimport Upcomming from '../pages/Upcomming';\nimport Latest from '../pages/Latest';\nimport Detail from '../pages/Detail';\nimport Expand from '../pages/Expand';\nimport Tv from '../pages/Tv';\n// import OnAir from '../pages/OnAir';\n\nconst indexUrl = {\n  '/': Home,\n  '/trending': Trending,\n  '/upcomming': Upcomming,\n  '/latest': Latest,\n  '/movie/:id': Detail,\n  '/tv/:id': Detail,\n  '/person/:id': Detail,\n  '/genre/:id': Expand,\n  '/tvshow': Tv,\n  '/on-air': Expand,\n  '/top-rated-tv': Expand,\n  '/popular-tv-show': Expand,\n  '/tv/:id/season/:idSeason': Detail,\n};\n\nexport default indexUrl;\n","const urlParse = {\n  parseUrl() {\n    const url = window.location.hash.slice(1);\n    const splitedUrl = this.splitUrl(url);\n    return this.urlCombiner(splitedUrl);\n  },\n\n  parseUrlWithoutCombiner() {\n    const url = window.location.hash.slice(1).toLowerCase();\n    return this.splitUrl(url);\n  },\n\n  splitUrl(url) {\n    const split = url.split('/');\n    return {\n      pages: split[1] || null,\n      id: split[2] || null,\n      season: split[3] || null,\n      idSeason: split[4] || null,\n    };\n  },\n\n  urlCombiner(splitedUrl) {\n    return (splitedUrl.pages ? `/${splitedUrl.pages}` : '/')\n      + (splitedUrl.id ? '/:id' : '')\n      + (splitedUrl.season ? `/${splitedUrl.season}` : '')\n      + (splitedUrl.idSeason ? '/:idSeason' : '');\n  },\n};\n\nexport default urlParse;\n"],"names":["MoviesDB","getData","pagination","Trending","render","afterRender","upcommingContainer","document","querySelector","trendingContainer","trendingTvContainer","Upcomming","slider","allUpcomming","trendingTv","detailMovieOrTvTemplate","Tv","tvSlider","tvUpcomming","tvLatest","topRatedContainer","popularTvContainer","Latest","data","CreditMovieOrTv","id","cast","TvOnAir","TopRated","PopularMovieOrTv","innerHTML","Home","Detail","Expand","indexUrl","urlParse","parseUrl","url","window","location","hash","slice","splitedUrl","splitUrl","urlCombiner","parseUrlWithoutCombiner","toLowerCase","split","pages","season","idSeason"],"sourceRoot":""}