{"version":3,"file":"app~4d5e1b1f.bundle.js","mappings":"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","sources":["webpack://movies-detail-app/./src/script/App/app.js","webpack://movies-detail-app/./src/script/data/MoviesDB.js"],"sourcesContent":["import indexUrl from '../routes/indexUrl';\nimport urlParse from '../routes/urlParse';\n\nclass App {\n  constructor({ content }) {\n    this._content = content;\n  }\n\n  async renderPage() {\n    const url = urlParse.parseUrl();\n    const page = indexUrl[url];\n    this._content.innerHTML = await page.render();\n    await page.afterRender();\n    // console.log(url);\n  }\n}\n\nexport default App;\n","/* eslint-disable array-callback-return */\n/* eslint-disable max-len */\n/* eslint-disable no-nested-ternary */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-return-assign */\n/* eslint-disable eqeqeq */\n/* eslint-disable no-unused-expressions */\nimport apiConfig from '../../config/apiConfig';\n\nclass MoviesDB {\n  static async Upcomming(page = '1', MovieOrTv = 'movie') {\n    const response = await fetch(apiConfig.getUpcommingMoviesOrTv(page, MovieOrTv));\n    const responseJson = await response.json();\n    const data = [];\n    if (MovieOrTv === 'movie') {\n      responseJson.results.forEach((movie) => {\n        movie.media = 'movie';\n        data.push(movie);\n      });\n      // console.log(data);\n      return data;\n    }\n    responseJson.results.forEach((tv) => {\n      tv.media = 'tv';\n      data.push(tv);\n    });\n    // console.log(data);\n    return data;\n  }\n\n  static async Trending(page = '1', MoviesOrTv = 'movie') {\n    const response = await fetch(apiConfig.getTrendingMoviesOrTv(page, MoviesOrTv));\n    const responseJson = await response.json();\n    const data = [];\n    if (MoviesOrTv === 'movie') {\n      responseJson.results.forEach((movie) => {\n        movie.media = 'movie';\n        data.push(movie);\n      });\n      // console.log(data);\n      return data;\n    }\n    responseJson.results.forEach((tv) => {\n      tv.media = 'tv';\n      data.push(tv);\n    });\n    // console.log(data);\n    return data;\n  }\n\n  static async Latest(MoviesOrTv = 'movie') {\n    const response = await fetch(apiConfig.getLatestMoviesOrTv(MoviesOrTv));\n    const responseJson = await response.json();\n    if (MoviesOrTv === 'movie') {\n      responseJson.latest = 'true';\n      return responseJson;\n    }\n    responseJson.latest = 'true';\n    return responseJson;\n  }\n\n  static async Genre(MovieOrTv = 'movie') {\n    const response1 = await fetch(apiConfig.getGenre(MovieOrTv));\n    const responseJson1 = await response1.json();\n    const response2 = await fetch(apiConfig.getGenre('tv'));\n    const responseJson2 = await response2.json();\n    const data = responseJson1.genres;\n    responseJson2.genres.map((x) => {\n      if (!responseJson1.genres.some((i) => i.name === x.name)) {\n        data.push(x);\n      }\n    });\n    return data;\n  }\n\n  static async MovieOrTvByGenre(id, page = '1', MovieOrTv = 'movie') {\n    const response1 = await fetch(apiConfig.getMovieOrTvByGenre(id, page, MovieOrTv));\n    const responseJson1 = await response1.json();\n    const response2 = await fetch(apiConfig.getMovieOrTvByGenre(id, page, 'tv'));\n    const responseJson2 = await response2.json();\n    const data = [];\n    responseJson1.results.forEach((movie) => {\n      movie.media = 'movie';\n      movie.dateToSort = movie.release_date;\n      data.push(movie);\n    });\n    responseJson2.results.forEach((tv) => {\n      tv.media = 'tv';\n      tv.dateToSort = tv.first_air_date;\n      data.push(tv);\n    });\n    // console.log(data.sort((a, b) => ((a.dateToSort < b.dateToSort) ? 1 : (a.dateToSort > b.dateToSort) ? -1 : 0)));\n    return data.sort((a, b) => ((a.dateToSort < b.dateToSort) ? 1 : (a.dateToSort > b.dateToSort) ? -1 : 0));\n  }\n\n  static async spesificGenre(idGenre, MovieOrTv = 'movie') {\n    const response1 = await fetch(apiConfig.getGenre(MovieOrTv));\n    const responseJson1 = await response1.json();\n    const response2 = await fetch(apiConfig.getGenre('tv'));\n    const responseJson2 = await response2.json();\n    let genres = '';\n    responseJson1.genres.forEach((genre) => (genre.id == idGenre ? genres = genre.name : ''));\n    responseJson2.genres.forEach((genre) => (genre.id == idGenre ? genres = genre.name : ''));\n    return genres;\n  }\n\n  static async Trailer(id, MovieOrTv = 'movie') {\n    const response = await fetch(apiConfig.getTrailler(id, MovieOrTv));\n    const responseJson = await response.json();\n    // console.log(responseJson.results);\n    return responseJson.results.filter((trailer) => trailer.type === 'Trailer' || trailer.type === 'Clip');\n  }\n\n  static async Actor() {\n    const response = await fetch(apiConfig.getPopularActor);\n    const responseJson = await response.json();\n    const data = [];\n    responseJson.results.forEach((person) => {\n      person.media = 'person';\n      data.push(person);\n    });\n    // console.log(data);\n    return data;\n  }\n\n  static async DetailActor(id) {\n    const response = await fetch(apiConfig.getDetailActor(id));\n    const responseJson = await response.json();\n    return responseJson;\n  }\n\n  static async MoviesOrTvByActor(id, MovieOrTv = 'movie') {\n    const response = await fetch(apiConfig.getMoviesOrTvByActor(id, MovieOrTv));\n    const responseJson = await response.json();\n    const data = [];\n    if (MovieOrTv === 'movie') {\n      responseJson.cast.forEach((movie) => {\n        movie.media = 'movie';\n        data.push(movie);\n      });\n      // console.log(data);\n      return data;\n    }\n    responseJson.cast.forEach((tv) => {\n      tv.media = 'tv';\n      data.push(tv);\n    });\n    // console.log(data);\n    return data;\n  }\n\n  static async MoviesNowPlaying(page = '1') {\n    const response = await fetch(apiConfig.getNowPlayingMovies(page));\n    const responseJson = await response.json();\n    const data = [];\n    responseJson.results.forEach((movie) => {\n      movie.media = 'movie';\n      data.push(movie);\n    });\n    return data;\n  }\n\n  static async Detail(id, MovieOrTv = 'movie') {\n    const response = await fetch(apiConfig.getDetailMovieOrTv(id, MovieOrTv));\n    const responseJson = await response.json();\n    if (MovieOrTv === 'movie') {\n      responseJson.media = 'movie';\n      return responseJson;\n    }\n    responseJson.media = 'tv';\n    return responseJson;\n  }\n\n  static async Recommendation(id, MovieOrTv = 'movie') {\n    const response = await fetch(apiConfig.getRecommendationMoviesOrTv(id, MovieOrTv));\n    const responseJson = await response.json();\n    const data = [];\n    if (MovieOrTv === 'movie') {\n      responseJson.results.forEach((movie) => {\n        movie.media = 'movie';\n        data.push(movie);\n      });\n      // console.log(data);\n      return data;\n    }\n    responseJson.results.forEach((tv) => {\n      tv.media = 'tv';\n      data.push(tv);\n    });\n    // console.log(data);\n    return data;\n  }\n\n  static async Similar(id, MovieOrTv = 'movie') {\n    const response = await fetch(apiConfig.getSimilarMoviesOrTv(id, MovieOrTv));\n    const responseJson = await response.json();\n    const data = [];\n    if (MovieOrTv === 'movie') {\n      responseJson.results.forEach((movie) => {\n        movie.media = 'movie';\n        data.push(movie);\n      });\n      // console.log(data);\n      return data;\n    }\n    responseJson.results.forEach((tv) => {\n      tv.media = 'tv';\n      data.push(tv);\n    });\n    // console.log(data);\n    return data;\n  }\n\n  static async Search(query) {\n    const response = await fetch(apiConfig.searchMoviesOrTv(query));\n    const responseJson = await response.json();\n    return responseJson.results;\n  }\n\n  static async CreditMovieOrTv(id, MovieOrTv = 'movie') {\n    const response = await fetch(apiConfig.getCastByMovieOrTv(id, MovieOrTv));\n    const responseJson = await response.json();\n    responseJson.cast.forEach((person) => {\n      person.media = 'person';\n    });\n    return responseJson.cast;\n  }\n\n  static async AiringToday(page = '1') {\n    const response = await fetch(apiConfig.getTvAiringtoday(page));\n    const responseJson = await response.json();\n    responseJson.results.forEach((tv) => {\n      tv.media = 'tv';\n    });\n    return responseJson.results;\n  }\n\n  static async TvOnAir(page = '1') {\n    const response = await fetch(apiConfig.getTvAiringtoday(page));\n    const responseJson = await response.json();\n    responseJson.results.forEach((tv) => {\n      tv.media = 'tv';\n    });\n    return responseJson.results;\n  }\n\n  static async SeasonDetail(id, seasonNumber) {\n    const response = await fetch(apiConfig.getDetailSeason(id, seasonNumber));\n    const responseJson = await response.json();\n    // console.log(responseJson);\n    return responseJson;\n  }\n\n  static async EpisodeDetail(id, seasonNumber, episodeNumber) {\n    const response = await fetch(apiConfig.getDetailEpisode(id, seasonNumber, episodeNumber));\n    const responseJson = await response.json();\n    return responseJson;\n  }\n\n  static async TopRated(page = '1', MovieOrTv = 'movie') {\n    const response = await fetch(apiConfig.getTopRated(page, MovieOrTv));\n    const responseJson = await response.json();\n    if (MovieOrTv === 'tv') {\n      responseJson.results.map((tv) => {\n        tv.media = 'tv';\n      });\n      return responseJson.results;\n    }\n    responseJson.results.map((movie) => {\n      movie.media = 'movie';\n    });\n    return responseJson.results;\n  }\n\n  static async PopularMovieOrTv(page = '1', MovieOrTv = 'movie') {\n    const response = await fetch(apiConfig.getPopularMovieOrTv(page, MovieOrTv));\n    const responseJson = await response.json();\n    if (MovieOrTv === 'tv') {\n      responseJson.results.map((tv) => {\n        tv.media = 'tv';\n      });\n      return responseJson.results;\n    }\n    responseJson.results.map((movie) => {\n      movie.media = 'movie';\n    });\n    return responseJson.results;\n    // console.log(responseJson.results);\n  }\n}\n\nexport default MoviesDB;\n"],"names":["i","content","this","_content","url","urlParse","page","indexUrl","render","innerHTML","afterRender","MovieOrTv","fetch","apiConfig","response","json","responseJson","data","results","forEach","movie","media","push","tv","MoviesOrTv","latest","response1","responseJson1","response2","responseJson2","genres","map","x","some","name","id","dateToSort","release_date","first_air_date","sort","a","b","idGenre","genre","filter","trailer","type","person","cast","query","seasonNumber","episodeNumber"],"sourceRoot":""}